/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 19.0, "minX": 0.0, "maxY": 11045.0, "series": [{"data": [[0.0, 19.0], [0.1, 35.0], [0.2, 46.0], [0.3, 54.0], [0.4, 70.0], [0.5, 87.0], [0.6, 130.0], [0.7, 201.0], [0.8, 377.0], [0.9, 640.0], [1.0, 823.0], [1.1, 906.0], [1.2, 1052.0], [1.3, 1168.0], [1.4, 1318.0], [1.5, 1518.0], [1.6, 1599.0], [1.7, 1702.0], [1.8, 1770.0], [1.9, 1852.0], [2.0, 1960.0], [2.1, 2100.0], [2.2, 2200.0], [2.3, 2289.0], [2.4, 2367.0], [2.5, 2468.0], [2.6, 2547.0], [2.7, 2602.0], [2.8, 2693.0], [2.9, 2771.0], [3.0, 2827.0], [3.1, 2909.0], [3.2, 3028.0], [3.3, 3097.0], [3.4, 3158.0], [3.5, 3218.0], [3.6, 3256.0], [3.7, 3285.0], [3.8, 3320.0], [3.9, 3344.0], [4.0, 3365.0], [4.1, 3386.0], [4.2, 3412.0], [4.3, 3430.0], [4.4, 3443.0], [4.5, 3466.0], [4.6, 3493.0], [4.7, 3511.0], [4.8, 3529.0], [4.9, 3555.0], [5.0, 3578.0], [5.1, 3601.0], [5.2, 3615.0], [5.3, 3638.0], [5.4, 3663.0], [5.5, 3683.0], [5.6, 3702.0], [5.7, 3740.0], [5.8, 3772.0], [5.9, 3805.0], [6.0, 3835.0], [6.1, 3867.0], [6.2, 3901.0], [6.3, 3934.0], [6.4, 3954.0], [6.5, 3978.0], [6.6, 3994.0], [6.7, 4020.0], [6.8, 4041.0], [6.9, 4058.0], [7.0, 4081.0], [7.1, 4100.0], [7.2, 4120.0], [7.3, 4137.0], [7.4, 4155.0], [7.5, 4176.0], [7.6, 4194.0], [7.7, 4213.0], [7.8, 4240.0], [7.9, 4265.0], [8.0, 4285.0], [8.1, 4306.0], [8.2, 4326.0], [8.3, 4343.0], [8.4, 4364.0], [8.5, 4385.0], [8.6, 4410.0], [8.7, 4436.0], [8.8, 4460.0], [8.9, 4476.0], [9.0, 4496.0], [9.1, 4525.0], [9.2, 4555.0], [9.3, 4578.0], [9.4, 4599.0], [9.5, 4614.0], [9.6, 4638.0], [9.7, 4667.0], [9.8, 4695.0], [9.9, 4729.0], [10.0, 4757.0], [10.1, 4785.0], [10.2, 4811.0], [10.3, 4846.0], [10.4, 4868.0], [10.5, 4892.0], [10.6, 4917.0], [10.7, 4942.0], [10.8, 4979.0], [10.9, 5006.0], [11.0, 5035.0], [11.1, 5052.0], [11.2, 5080.0], [11.3, 5102.0], [11.4, 5127.0], [11.5, 5155.0], [11.6, 5192.0], [11.7, 5218.0], [11.8, 5245.0], [11.9, 5267.0], [12.0, 5282.0], [12.1, 5304.0], [12.2, 5334.0], [12.3, 5362.0], [12.4, 5380.0], [12.5, 5409.0], [12.6, 5423.0], [12.7, 5444.0], [12.8, 5461.0], [12.9, 5482.0], [13.0, 5498.0], [13.1, 5513.0], [13.2, 5532.0], [13.3, 5545.0], [13.4, 5565.0], [13.5, 5583.0], [13.6, 5605.0], [13.7, 5620.0], [13.8, 5638.0], [13.9, 5653.0], [14.0, 5665.0], [14.1, 5679.0], [14.2, 5697.0], [14.3, 5714.0], [14.4, 5732.0], [14.5, 5744.0], [14.6, 5756.0], [14.7, 5765.0], [14.8, 5773.0], [14.9, 5781.0], [15.0, 5791.0], [15.1, 5803.0], [15.2, 5812.0], [15.3, 5821.0], [15.4, 5835.0], [15.5, 5845.0], [15.6, 5854.0], [15.7, 5862.0], [15.8, 5871.0], [15.9, 5883.0], [16.0, 5889.0], [16.1, 5894.0], [16.2, 5898.0], [16.3, 5905.0], [16.4, 5911.0], [16.5, 5919.0], [16.6, 5927.0], [16.7, 5935.0], [16.8, 5942.0], [16.9, 5948.0], [17.0, 5954.0], [17.1, 5958.0], [17.2, 5965.0], [17.3, 5972.0], [17.4, 5978.0], [17.5, 5983.0], [17.6, 5989.0], [17.7, 5994.0], [17.8, 5999.0], [17.9, 6003.0], [18.0, 6008.0], [18.1, 6013.0], [18.2, 6017.0], [18.3, 6021.0], [18.4, 6026.0], [18.5, 6031.0], [18.6, 6037.0], [18.7, 6041.0], [18.8, 6045.0], [18.9, 6049.0], [19.0, 6054.0], [19.1, 6058.0], [19.2, 6065.0], [19.3, 6072.0], [19.4, 6077.0], [19.5, 6085.0], [19.6, 6092.0], [19.7, 6098.0], [19.8, 6107.0], [19.9, 6113.0], [20.0, 6121.0], [20.1, 6127.0], [20.2, 6135.0], [20.3, 6144.0], [20.4, 6148.0], [20.5, 6154.0], [20.6, 6160.0], [20.7, 6166.0], [20.8, 6171.0], [20.9, 6176.0], [21.0, 6182.0], [21.1, 6187.0], [21.2, 6192.0], [21.3, 6198.0], [21.4, 6202.0], [21.5, 6206.0], [21.6, 6208.0], [21.7, 6212.0], [21.8, 6218.0], [21.9, 6222.0], [22.0, 6226.0], [22.1, 6231.0], [22.2, 6233.0], [22.3, 6236.0], [22.4, 6239.0], [22.5, 6241.0], [22.6, 6245.0], [22.7, 6248.0], [22.8, 6251.0], [22.9, 6254.0], [23.0, 6256.0], [23.1, 6259.0], [23.2, 6262.0], [23.3, 6265.0], [23.4, 6270.0], [23.5, 6273.0], [23.6, 6278.0], [23.7, 6283.0], [23.8, 6286.0], [23.9, 6290.0], [24.0, 6294.0], [24.1, 6300.0], [24.2, 6306.0], [24.3, 6311.0], [24.4, 6318.0], [24.5, 6322.0], [24.6, 6326.0], [24.7, 6333.0], [24.8, 6339.0], [24.9, 6345.0], [25.0, 6349.0], [25.1, 6355.0], [25.2, 6361.0], [25.3, 6367.0], [25.4, 6371.0], [25.5, 6377.0], [25.6, 6382.0], [25.7, 6388.0], [25.8, 6394.0], [25.9, 6399.0], [26.0, 6405.0], [26.1, 6410.0], [26.2, 6415.0], [26.3, 6422.0], [26.4, 6427.0], [26.5, 6431.0], [26.6, 6437.0], [26.7, 6440.0], [26.8, 6444.0], [26.9, 6448.0], [27.0, 6451.0], [27.1, 6455.0], [27.2, 6460.0], [27.3, 6463.0], [27.4, 6466.0], [27.5, 6469.0], [27.6, 6473.0], [27.7, 6477.0], [27.8, 6481.0], [27.9, 6489.0], [28.0, 6493.0], [28.1, 6501.0], [28.2, 6507.0], [28.3, 6512.0], [28.4, 6517.0], [28.5, 6521.0], [28.6, 6528.0], [28.7, 6535.0], [28.8, 6541.0], [28.9, 6549.0], [29.0, 6558.0], [29.1, 6567.0], [29.2, 6574.0], [29.3, 6587.0], [29.4, 6595.0], [29.5, 6602.0], [29.6, 6609.0], [29.7, 6615.0], [29.8, 6620.0], [29.9, 6625.0], [30.0, 6634.0], [30.1, 6640.0], [30.2, 6647.0], [30.3, 6652.0], [30.4, 6659.0], [30.5, 6666.0], [30.6, 6674.0], [30.7, 6680.0], [30.8, 6686.0], [30.9, 6694.0], [31.0, 6703.0], [31.1, 6709.0], [31.2, 6716.0], [31.3, 6724.0], [31.4, 6731.0], [31.5, 6739.0], [31.6, 6748.0], [31.7, 6755.0], [31.8, 6762.0], [31.9, 6769.0], [32.0, 6777.0], [32.1, 6784.0], [32.2, 6791.0], [32.3, 6797.0], [32.4, 6804.0], [32.5, 6810.0], [32.6, 6818.0], [32.7, 6824.0], [32.8, 6832.0], [32.9, 6839.0], [33.0, 6847.0], [33.1, 6854.0], [33.2, 6860.0], [33.3, 6867.0], [33.4, 6877.0], [33.5, 6884.0], [33.6, 6892.0], [33.7, 6900.0], [33.8, 6908.0], [33.9, 6915.0], [34.0, 6924.0], [34.1, 6931.0], [34.2, 6940.0], [34.3, 6948.0], [34.4, 6957.0], [34.5, 6965.0], [34.6, 6972.0], [34.7, 6982.0], [34.8, 6990.0], [34.9, 6999.0], [35.0, 7007.0], [35.1, 7017.0], [35.2, 7025.0], [35.3, 7031.0], [35.4, 7038.0], [35.5, 7048.0], [35.6, 7061.0], [35.7, 7068.0], [35.8, 7074.0], [35.9, 7082.0], [36.0, 7089.0], [36.1, 7094.0], [36.2, 7099.0], [36.3, 7111.0], [36.4, 7118.0], [36.5, 7124.0], [36.6, 7131.0], [36.7, 7142.0], [36.8, 7148.0], [36.9, 7155.0], [37.0, 7163.0], [37.1, 7174.0], [37.2, 7181.0], [37.3, 7187.0], [37.4, 7197.0], [37.5, 7204.0], [37.6, 7209.0], [37.7, 7214.0], [37.8, 7220.0], [37.9, 7226.0], [38.0, 7233.0], [38.1, 7238.0], [38.2, 7246.0], [38.3, 7253.0], [38.4, 7256.0], [38.5, 7262.0], [38.6, 7269.0], [38.7, 7276.0], [38.8, 7281.0], [38.9, 7286.0], [39.0, 7294.0], [39.1, 7302.0], [39.2, 7310.0], [39.3, 7317.0], [39.4, 7321.0], [39.5, 7328.0], [39.6, 7336.0], [39.7, 7342.0], [39.8, 7350.0], [39.9, 7355.0], [40.0, 7362.0], [40.1, 7367.0], [40.2, 7374.0], [40.3, 7382.0], [40.4, 7389.0], [40.5, 7398.0], [40.6, 7408.0], [40.7, 7416.0], [40.8, 7425.0], [40.9, 7434.0], [41.0, 7440.0], [41.1, 7447.0], [41.2, 7453.0], [41.3, 7460.0], [41.4, 7471.0], [41.5, 7480.0], [41.6, 7486.0], [41.7, 7495.0], [41.8, 7504.0], [41.9, 7513.0], [42.0, 7521.0], [42.1, 7535.0], [42.2, 7545.0], [42.3, 7554.0], [42.4, 7558.0], [42.5, 7569.0], [42.6, 7578.0], [42.7, 7587.0], [42.8, 7600.0], [42.9, 7610.0], [43.0, 7620.0], [43.1, 7629.0], [43.2, 7639.0], [43.3, 7649.0], [43.4, 7660.0], [43.5, 7669.0], [43.6, 7681.0], [43.7, 7691.0], [43.8, 7699.0], [43.9, 7708.0], [44.0, 7718.0], [44.1, 7727.0], [44.2, 7734.0], [44.3, 7742.0], [44.4, 7750.0], [44.5, 7756.0], [44.6, 7768.0], [44.7, 7779.0], [44.8, 7787.0], [44.9, 7797.0], [45.0, 7805.0], [45.1, 7816.0], [45.2, 7822.0], [45.3, 7835.0], [45.4, 7846.0], [45.5, 7856.0], [45.6, 7868.0], [45.7, 7875.0], [45.8, 7885.0], [45.9, 7892.0], [46.0, 7899.0], [46.1, 7907.0], [46.2, 7915.0], [46.3, 7925.0], [46.4, 7934.0], [46.5, 7943.0], [46.6, 7950.0], [46.7, 7956.0], [46.8, 7962.0], [46.9, 7970.0], [47.0, 7976.0], [47.1, 7981.0], [47.2, 7986.0], [47.3, 7990.0], [47.4, 7995.0], [47.5, 8001.0], [47.6, 8008.0], [47.7, 8013.0], [47.8, 8020.0], [47.9, 8026.0], [48.0, 8034.0], [48.1, 8042.0], [48.2, 8047.0], [48.3, 8051.0], [48.4, 8057.0], [48.5, 8061.0], [48.6, 8065.0], [48.7, 8072.0], [48.8, 8079.0], [48.9, 8087.0], [49.0, 8094.0], [49.1, 8100.0], [49.2, 8109.0], [49.3, 8115.0], [49.4, 8122.0], [49.5, 8127.0], [49.6, 8133.0], [49.7, 8138.0], [49.8, 8144.0], [49.9, 8150.0], [50.0, 8157.0], [50.1, 8164.0], [50.2, 8171.0], [50.3, 8180.0], [50.4, 8187.0], [50.5, 8192.0], [50.6, 8198.0], [50.7, 8204.0], [50.8, 8211.0], [50.9, 8217.0], [51.0, 8223.0], [51.1, 8228.0], [51.2, 8232.0], [51.3, 8237.0], [51.4, 8241.0], [51.5, 8247.0], [51.6, 8251.0], [51.7, 8257.0], [51.8, 8263.0], [51.9, 8267.0], [52.0, 8273.0], [52.1, 8278.0], [52.2, 8284.0], [52.3, 8288.0], [52.4, 8292.0], [52.5, 8299.0], [52.6, 8303.0], [52.7, 8308.0], [52.8, 8312.0], [52.9, 8317.0], [53.0, 8322.0], [53.1, 8327.0], [53.2, 8332.0], [53.3, 8337.0], [53.4, 8343.0], [53.5, 8349.0], [53.6, 8353.0], [53.7, 8360.0], [53.8, 8364.0], [53.9, 8371.0], [54.0, 8378.0], [54.1, 8385.0], [54.2, 8392.0], [54.3, 8399.0], [54.4, 8405.0], [54.5, 8411.0], [54.6, 8418.0], [54.7, 8423.0], [54.8, 8430.0], [54.9, 8436.0], [55.0, 8441.0], [55.1, 8447.0], [55.2, 8451.0], [55.3, 8459.0], [55.4, 8466.0], [55.5, 8470.0], [55.6, 8477.0], [55.7, 8484.0], [55.8, 8489.0], [55.9, 8495.0], [56.0, 8501.0], [56.1, 8510.0], [56.2, 8516.0], [56.3, 8523.0], [56.4, 8530.0], [56.5, 8537.0], [56.6, 8544.0], [56.7, 8552.0], [56.8, 8559.0], [56.9, 8567.0], [57.0, 8574.0], [57.1, 8583.0], [57.2, 8591.0], [57.3, 8598.0], [57.4, 8608.0], [57.5, 8615.0], [57.6, 8624.0], [57.7, 8632.0], [57.8, 8637.0], [57.9, 8645.0], [58.0, 8655.0], [58.1, 8663.0], [58.2, 8669.0], [58.3, 8677.0], [58.4, 8685.0], [58.5, 8692.0], [58.6, 8698.0], [58.7, 8708.0], [58.8, 8716.0], [58.9, 8725.0], [59.0, 8731.0], [59.1, 8739.0], [59.2, 8746.0], [59.3, 8755.0], [59.4, 8768.0], [59.5, 8774.0], [59.6, 8782.0], [59.7, 8792.0], [59.8, 8802.0], [59.9, 8812.0], [60.0, 8819.0], [60.1, 8828.0], [60.2, 8836.0], [60.3, 8842.0], [60.4, 8851.0], [60.5, 8860.0], [60.6, 8867.0], [60.7, 8875.0], [60.8, 8884.0], [60.9, 8894.0], [61.0, 8904.0], [61.1, 8911.0], [61.2, 8919.0], [61.3, 8930.0], [61.4, 8940.0], [61.5, 8954.0], [61.6, 8967.0], [61.7, 8977.0], [61.8, 8985.0], [61.9, 8995.0], [62.0, 9001.0], [62.1, 9010.0], [62.2, 9020.0], [62.3, 9030.0], [62.4, 9038.0], [62.5, 9049.0], [62.6, 9060.0], [62.7, 9067.0], [62.8, 9072.0], [62.9, 9082.0], [63.0, 9090.0], [63.1, 9099.0], [63.2, 9107.0], [63.3, 9117.0], [63.4, 9125.0], [63.5, 9133.0], [63.6, 9140.0], [63.7, 9146.0], [63.8, 9154.0], [63.9, 9163.0], [64.0, 9172.0], [64.1, 9180.0], [64.2, 9189.0], [64.3, 9198.0], [64.4, 9211.0], [64.5, 9221.0], [64.6, 9232.0], [64.7, 9241.0], [64.8, 9252.0], [64.9, 9259.0], [65.0, 9271.0], [65.1, 9278.0], [65.2, 9289.0], [65.3, 9302.0], [65.4, 9310.0], [65.5, 9319.0], [65.6, 9327.0], [65.7, 9335.0], [65.8, 9346.0], [65.9, 9354.0], [66.0, 9366.0], [66.1, 9376.0], [66.2, 9383.0], [66.3, 9394.0], [66.4, 9401.0], [66.5, 9411.0], [66.6, 9423.0], [66.7, 9432.0], [66.8, 9442.0], [66.9, 9453.0], [67.0, 9462.0], [67.1, 9469.0], [67.2, 9475.0], [67.3, 9482.0], [67.4, 9489.0], [67.5, 9496.0], [67.6, 9504.0], [67.7, 9510.0], [67.8, 9519.0], [67.9, 9526.0], [68.0, 9534.0], [68.1, 9542.0], [68.2, 9553.0], [68.3, 9561.0], [68.4, 9574.0], [68.5, 9582.0], [68.6, 9591.0], [68.7, 9602.0], [68.8, 9613.0], [68.9, 9622.0], [69.0, 9630.0], [69.1, 9640.0], [69.2, 9652.0], [69.3, 9662.0], [69.4, 9675.0], [69.5, 9689.0], [69.6, 9700.0], [69.7, 9709.0], [69.8, 9718.0], [69.9, 9727.0], [70.0, 9738.0], [70.1, 9751.0], [70.2, 9761.0], [70.3, 9770.0], [70.4, 9781.0], [70.5, 9790.0], [70.6, 9799.0], [70.7, 9809.0], [70.8, 9819.0], [70.9, 9830.0], [71.0, 9841.0], [71.1, 9850.0], [71.2, 9859.0], [71.3, 9871.0], [71.4, 9877.0], [71.5, 9885.0], [71.6, 9896.0], [71.7, 9907.0], [71.8, 9916.0], [71.9, 9925.0], [72.0, 9934.0], [72.1, 9943.0], [72.2, 9952.0], [72.3, 9962.0], [72.4, 9972.0], [72.5, 9981.0], [72.6, 9992.0], [72.7, 10004.0], [72.8, 10007.0], [72.9, 10007.0], [73.0, 10007.0], [73.1, 10007.0], [73.2, 10007.0], [73.3, 10007.0], [73.4, 10007.0], [73.5, 10007.0], [73.6, 10007.0], [73.7, 10007.0], [73.8, 10007.0], [73.9, 10007.0], [74.0, 10007.0], [74.1, 10007.0], [74.2, 10007.0], [74.3, 10007.0], [74.4, 10007.0], [74.5, 10007.0], [74.6, 10007.0], [74.7, 10007.0], [74.8, 10007.0], [74.9, 10007.0], [75.0, 10007.0], [75.1, 10007.0], [75.2, 10007.0], [75.3, 10007.0], [75.4, 10007.0], [75.5, 10007.0], [75.6, 10007.0], [75.7, 10007.0], [75.8, 10007.0], [75.9, 10007.0], [76.0, 10008.0], [76.1, 10008.0], [76.2, 10008.0], [76.3, 10008.0], [76.4, 10008.0], [76.5, 10008.0], [76.6, 10008.0], [76.7, 10008.0], [76.8, 10008.0], [76.9, 10008.0], [77.0, 10008.0], [77.1, 10008.0], [77.2, 10008.0], [77.3, 10008.0], [77.4, 10008.0], [77.5, 10008.0], [77.6, 10008.0], [77.7, 10008.0], [77.8, 10008.0], [77.9, 10008.0], [78.0, 10008.0], [78.1, 10008.0], [78.2, 10008.0], [78.3, 10008.0], [78.4, 10008.0], [78.5, 10008.0], [78.6, 10008.0], [78.7, 10008.0], [78.8, 10008.0], [78.9, 10008.0], [79.0, 10008.0], [79.1, 10008.0], [79.2, 10008.0], [79.3, 10008.0], [79.4, 10008.0], [79.5, 10008.0], [79.6, 10008.0], [79.7, 10008.0], [79.8, 10008.0], [79.9, 10008.0], [80.0, 10008.0], [80.1, 10008.0], [80.2, 10008.0], [80.3, 10008.0], [80.4, 10008.0], [80.5, 10008.0], [80.6, 10008.0], [80.7, 10008.0], [80.8, 10008.0], [80.9, 10008.0], [81.0, 10008.0], [81.1, 10008.0], [81.2, 10008.0], [81.3, 10008.0], [81.4, 10008.0], [81.5, 10008.0], [81.6, 10008.0], [81.7, 10008.0], [81.8, 10008.0], [81.9, 10008.0], [82.0, 10008.0], [82.1, 10009.0], [82.2, 10009.0], [82.3, 10009.0], [82.4, 10009.0], [82.5, 10009.0], [82.6, 10009.0], [82.7, 10009.0], [82.8, 10009.0], [82.9, 10009.0], [83.0, 10009.0], [83.1, 10009.0], [83.2, 10009.0], [83.3, 10009.0], [83.4, 10009.0], [83.5, 10009.0], [83.6, 10009.0], [83.7, 10009.0], [83.8, 10009.0], [83.9, 10009.0], [84.0, 10009.0], [84.1, 10009.0], [84.2, 10009.0], [84.3, 10009.0], [84.4, 10009.0], [84.5, 10009.0], [84.6, 10009.0], [84.7, 10009.0], [84.8, 10009.0], [84.9, 10009.0], [85.0, 10009.0], [85.1, 10009.0], [85.2, 10009.0], [85.3, 10009.0], [85.4, 10009.0], [85.5, 10009.0], [85.6, 10009.0], [85.7, 10009.0], [85.8, 10009.0], [85.9, 10009.0], [86.0, 10009.0], [86.1, 10009.0], [86.2, 10009.0], [86.3, 10009.0], [86.4, 10009.0], [86.5, 10009.0], [86.6, 10009.0], [86.7, 10009.0], [86.8, 10009.0], [86.9, 10009.0], [87.0, 10009.0], [87.1, 10009.0], [87.2, 10009.0], [87.3, 10009.0], [87.4, 10009.0], [87.5, 10009.0], [87.6, 10009.0], [87.7, 10009.0], [87.8, 10010.0], [87.9, 10010.0], [88.0, 10010.0], [88.1, 10010.0], [88.2, 10010.0], [88.3, 10010.0], [88.4, 10010.0], [88.5, 10010.0], [88.6, 10010.0], [88.7, 10010.0], [88.8, 10010.0], [88.9, 10010.0], [89.0, 10010.0], [89.1, 10010.0], [89.2, 10010.0], [89.3, 10010.0], [89.4, 10010.0], [89.5, 10010.0], [89.6, 10010.0], [89.7, 10010.0], [89.8, 10010.0], [89.9, 10010.0], [90.0, 10010.0], [90.1, 10010.0], [90.2, 10010.0], [90.3, 10010.0], [90.4, 10010.0], [90.5, 10010.0], [90.6, 10010.0], [90.7, 10010.0], [90.8, 10010.0], [90.9, 10010.0], [91.0, 10010.0], [91.1, 10010.0], [91.2, 10010.0], [91.3, 10010.0], [91.4, 10010.0], [91.5, 10010.0], [91.6, 10010.0], [91.7, 10010.0], [91.8, 10010.0], [91.9, 10010.0], [92.0, 10010.0], [92.1, 10010.0], [92.2, 10010.0], [92.3, 10010.0], [92.4, 10010.0], [92.5, 10010.0], [92.6, 10010.0], [92.7, 10010.0], [92.8, 10010.0], [92.9, 10010.0], [93.0, 10010.0], [93.1, 10010.0], [93.2, 10010.0], [93.3, 10010.0], [93.4, 10010.0], [93.5, 10010.0], [93.6, 10010.0], [93.7, 10010.0], [93.8, 10010.0], [93.9, 10010.0], [94.0, 10010.0], [94.1, 10010.0], [94.2, 10010.0], [94.3, 10010.0], [94.4, 10010.0], [94.5, 10011.0], [94.6, 10011.0], [94.7, 10011.0], [94.8, 10011.0], [94.9, 10011.0], [95.0, 10011.0], [95.1, 10011.0], [95.2, 10011.0], [95.3, 10011.0], [95.4, 10011.0], [95.5, 10011.0], [95.6, 10011.0], [95.7, 10011.0], [95.8, 10011.0], [95.9, 10011.0], [96.0, 10011.0], [96.1, 10011.0], [96.2, 10011.0], [96.3, 10011.0], [96.4, 10011.0], [96.5, 10011.0], [96.6, 10011.0], [96.7, 10011.0], [96.8, 10011.0], [96.9, 10011.0], [97.0, 10011.0], [97.1, 10011.0], [97.2, 10012.0], [97.3, 10012.0], [97.4, 10012.0], [97.5, 10012.0], [97.6, 10012.0], [97.7, 10012.0], [97.8, 10012.0], [97.9, 10012.0], [98.0, 10013.0], [98.1, 10013.0], [98.2, 10013.0], [98.3, 10013.0], [98.4, 10014.0], [98.5, 10014.0], [98.6, 10014.0], [98.7, 10014.0], [98.8, 10014.0], [98.9, 10015.0], [99.0, 10015.0], [99.1, 10016.0], [99.2, 10016.0], [99.3, 10017.0], [99.4, 10018.0], [99.5, 10019.0], [99.6, 10023.0], [99.7, 10056.0], [99.8, 10141.0], [99.9, 11024.0], [100.0, 11045.0]], "isOverall": false, "label": "02 - Validate Invoice", "isController": false}, {"data": [[0.0, 133.0], [0.1, 173.0], [0.2, 231.0], [0.3, 296.0], [0.4, 362.0], [0.5, 450.0], [0.6, 554.0], [0.7, 726.0], [0.8, 844.0], [0.9, 973.0], [1.0, 1063.0], [1.1, 1237.0], [1.2, 1371.0], [1.3, 1505.0], [1.4, 1644.0], [1.5, 1739.0], [1.6, 1831.0], [1.7, 1937.0], [1.8, 2025.0], [1.9, 2099.0], [2.0, 2188.0], [2.1, 2241.0], [2.2, 2292.0], [2.3, 2352.0], [2.4, 2429.0], [2.5, 2477.0], [2.6, 2529.0], [2.7, 2571.0], [2.8, 2645.0], [2.9, 2705.0], [3.0, 2773.0], [3.1, 2824.0], [3.2, 2889.0], [3.3, 2927.0], [3.4, 2980.0], [3.5, 3015.0], [3.6, 3058.0], [3.7, 3099.0], [3.8, 3155.0], [3.9, 3208.0], [4.0, 3259.0], [4.1, 3302.0], [4.2, 3346.0], [4.3, 3392.0], [4.4, 3434.0], [4.5, 3468.0], [4.6, 3518.0], [4.7, 3552.0], [4.8, 3589.0], [4.9, 3634.0], [5.0, 3682.0], [5.1, 3721.0], [5.2, 3760.0], [5.3, 3793.0], [5.4, 3829.0], [5.5, 3865.0], [5.6, 3896.0], [5.7, 3930.0], [5.8, 3953.0], [5.9, 3979.0], [6.0, 4003.0], [6.1, 4041.0], [6.2, 4068.0], [6.3, 4098.0], [6.4, 4126.0], [6.5, 4155.0], [6.6, 4180.0], [6.7, 4211.0], [6.8, 4247.0], [6.9, 4275.0], [7.0, 4302.0], [7.1, 4325.0], [7.2, 4354.0], [7.3, 4387.0], [7.4, 4412.0], [7.5, 4435.0], [7.6, 4467.0], [7.7, 4488.0], [7.8, 4519.0], [7.9, 4550.0], [8.0, 4571.0], [8.1, 4605.0], [8.2, 4631.0], [8.3, 4655.0], [8.4, 4684.0], [8.5, 4709.0], [8.6, 4723.0], [8.7, 4746.0], [8.8, 4765.0], [8.9, 4790.0], [9.0, 4819.0], [9.1, 4843.0], [9.2, 4865.0], [9.3, 4886.0], [9.4, 4902.0], [9.5, 4928.0], [9.6, 4951.0], [9.7, 4979.0], [9.8, 5010.0], [9.9, 5029.0], [10.0, 5048.0], [10.1, 5080.0], [10.2, 5100.0], [10.3, 5123.0], [10.4, 5151.0], [10.5, 5172.0], [10.6, 5193.0], [10.7, 5218.0], [10.8, 5242.0], [10.9, 5263.0], [11.0, 5283.0], [11.1, 5307.0], [11.2, 5322.0], [11.3, 5343.0], [11.4, 5361.0], [11.5, 5382.0], [11.6, 5404.0], [11.7, 5421.0], [11.8, 5444.0], [11.9, 5463.0], [12.0, 5482.0], [12.1, 5504.0], [12.2, 5523.0], [12.3, 5547.0], [12.4, 5560.0], [12.5, 5581.0], [12.6, 5600.0], [12.7, 5622.0], [12.8, 5637.0], [12.9, 5654.0], [13.0, 5671.0], [13.1, 5680.0], [13.2, 5699.0], [13.3, 5713.0], [13.4, 5733.0], [13.5, 5752.0], [13.6, 5764.0], [13.7, 5783.0], [13.8, 5801.0], [13.9, 5818.0], [14.0, 5833.0], [14.1, 5853.0], [14.2, 5864.0], [14.3, 5880.0], [14.4, 5899.0], [14.5, 5913.0], [14.6, 5927.0], [14.7, 5942.0], [14.8, 5958.0], [14.9, 5968.0], [15.0, 5980.0], [15.1, 5994.0], [15.2, 6005.0], [15.3, 6017.0], [15.4, 6031.0], [15.5, 6041.0], [15.6, 6051.0], [15.7, 6061.0], [15.8, 6073.0], [15.9, 6084.0], [16.0, 6098.0], [16.1, 6108.0], [16.2, 6122.0], [16.3, 6133.0], [16.4, 6145.0], [16.5, 6162.0], [16.6, 6177.0], [16.7, 6193.0], [16.8, 6205.0], [16.9, 6220.0], [17.0, 6232.0], [17.1, 6244.0], [17.2, 6254.0], [17.3, 6263.0], [17.4, 6278.0], [17.5, 6295.0], [17.6, 6307.0], [17.7, 6321.0], [17.8, 6330.0], [17.9, 6341.0], [18.0, 6354.0], [18.1, 6371.0], [18.2, 6379.0], [18.3, 6392.0], [18.4, 6403.0], [18.5, 6412.0], [18.6, 6428.0], [18.7, 6441.0], [18.8, 6455.0], [18.9, 6466.0], [19.0, 6475.0], [19.1, 6491.0], [19.2, 6503.0], [19.3, 6514.0], [19.4, 6528.0], [19.5, 6538.0], [19.6, 6549.0], [19.7, 6560.0], [19.8, 6571.0], [19.9, 6581.0], [20.0, 6594.0], [20.1, 6606.0], [20.2, 6618.0], [20.3, 6630.0], [20.4, 6639.0], [20.5, 6651.0], [20.6, 6662.0], [20.7, 6672.0], [20.8, 6685.0], [20.9, 6696.0], [21.0, 6708.0], [21.1, 6719.0], [21.2, 6730.0], [21.3, 6745.0], [21.4, 6753.0], [21.5, 6762.0], [21.6, 6770.0], [21.7, 6778.0], [21.8, 6791.0], [21.9, 6802.0], [22.0, 6810.0], [22.1, 6821.0], [22.2, 6833.0], [22.3, 6846.0], [22.4, 6857.0], [22.5, 6868.0], [22.6, 6879.0], [22.7, 6887.0], [22.8, 6901.0], [22.9, 6915.0], [23.0, 6922.0], [23.1, 6933.0], [23.2, 6942.0], [23.3, 6954.0], [23.4, 6965.0], [23.5, 6975.0], [23.6, 6986.0], [23.7, 6995.0], [23.8, 7006.0], [23.9, 7019.0], [24.0, 7029.0], [24.1, 7043.0], [24.2, 7053.0], [24.3, 7065.0], [24.4, 7076.0], [24.5, 7089.0], [24.6, 7098.0], [24.7, 7110.0], [24.8, 7119.0], [24.9, 7128.0], [25.0, 7140.0], [25.1, 7152.0], [25.2, 7162.0], [25.3, 7174.0], [25.4, 7184.0], [25.5, 7197.0], [25.6, 7209.0], [25.7, 7218.0], [25.8, 7231.0], [25.9, 7243.0], [26.0, 7254.0], [26.1, 7265.0], [26.2, 7278.0], [26.3, 7288.0], [26.4, 7296.0], [26.5, 7307.0], [26.6, 7317.0], [26.7, 7332.0], [26.8, 7341.0], [26.9, 7353.0], [27.0, 7365.0], [27.1, 7374.0], [27.2, 7386.0], [27.3, 7403.0], [27.4, 7411.0], [27.5, 7422.0], [27.6, 7433.0], [27.7, 7443.0], [27.8, 7454.0], [27.9, 7463.0], [28.0, 7472.0], [28.1, 7481.0], [28.2, 7490.0], [28.3, 7504.0], [28.4, 7511.0], [28.5, 7523.0], [28.6, 7535.0], [28.7, 7545.0], [28.8, 7555.0], [28.9, 7568.0], [29.0, 7576.0], [29.1, 7589.0], [29.2, 7598.0], [29.3, 7611.0], [29.4, 7623.0], [29.5, 7632.0], [29.6, 7647.0], [29.7, 7659.0], [29.8, 7672.0], [29.9, 7682.0], [30.0, 7693.0], [30.1, 7704.0], [30.2, 7713.0], [30.3, 7724.0], [30.4, 7735.0], [30.5, 7745.0], [30.6, 7755.0], [30.7, 7767.0], [30.8, 7779.0], [30.9, 7787.0], [31.0, 7799.0], [31.1, 7811.0], [31.2, 7820.0], [31.3, 7835.0], [31.4, 7846.0], [31.5, 7856.0], [31.6, 7866.0], [31.7, 7875.0], [31.8, 7884.0], [31.9, 7894.0], [32.0, 7900.0], [32.1, 7917.0], [32.2, 7929.0], [32.3, 7938.0], [32.4, 7950.0], [32.5, 7959.0], [32.6, 7970.0], [32.7, 7980.0], [32.8, 7987.0], [32.9, 8000.0], [33.0, 8011.0], [33.1, 8021.0], [33.2, 8032.0], [33.3, 8042.0], [33.4, 8050.0], [33.5, 8063.0], [33.6, 8074.0], [33.7, 8082.0], [33.8, 8092.0], [33.9, 8104.0], [34.0, 8114.0], [34.1, 8128.0], [34.2, 8134.0], [34.3, 8143.0], [34.4, 8153.0], [34.5, 8163.0], [34.6, 8170.0], [34.7, 8182.0], [34.8, 8192.0], [34.9, 8205.0], [35.0, 8215.0], [35.1, 8222.0], [35.2, 8232.0], [35.3, 8241.0], [35.4, 8251.0], [35.5, 8264.0], [35.6, 8275.0], [35.7, 8284.0], [35.8, 8292.0], [35.9, 8305.0], [36.0, 8312.0], [36.1, 8322.0], [36.2, 8332.0], [36.3, 8343.0], [36.4, 8353.0], [36.5, 8362.0], [36.6, 8377.0], [36.7, 8389.0], [36.8, 8397.0], [36.9, 8406.0], [37.0, 8415.0], [37.1, 8427.0], [37.2, 8438.0], [37.3, 8448.0], [37.4, 8461.0], [37.5, 8470.0], [37.6, 8478.0], [37.7, 8490.0], [37.8, 8501.0], [37.9, 8512.0], [38.0, 8521.0], [38.1, 8529.0], [38.2, 8541.0], [38.3, 8551.0], [38.4, 8562.0], [38.5, 8573.0], [38.6, 8584.0], [38.7, 8594.0], [38.8, 8601.0], [38.9, 8609.0], [39.0, 8621.0], [39.1, 8632.0], [39.2, 8642.0], [39.3, 8655.0], [39.4, 8665.0], [39.5, 8673.0], [39.6, 8683.0], [39.7, 8693.0], [39.8, 8701.0], [39.9, 8711.0], [40.0, 8722.0], [40.1, 8732.0], [40.2, 8742.0], [40.3, 8754.0], [40.4, 8761.0], [40.5, 8772.0], [40.6, 8783.0], [40.7, 8794.0], [40.8, 8803.0], [40.9, 8812.0], [41.0, 8820.0], [41.1, 8831.0], [41.2, 8841.0], [41.3, 8852.0], [41.4, 8861.0], [41.5, 8869.0], [41.6, 8880.0], [41.7, 8887.0], [41.8, 8894.0], [41.9, 8904.0], [42.0, 8914.0], [42.1, 8924.0], [42.2, 8933.0], [42.3, 8945.0], [42.4, 8953.0], [42.5, 8964.0], [42.6, 8973.0], [42.7, 8981.0], [42.8, 8989.0], [42.9, 9003.0], [43.0, 9013.0], [43.1, 9022.0], [43.2, 9032.0], [43.3, 9042.0], [43.4, 9050.0], [43.5, 9059.0], [43.6, 9068.0], [43.7, 9078.0], [43.8, 9088.0], [43.9, 9097.0], [44.0, 9105.0], [44.1, 9114.0], [44.2, 9122.0], [44.3, 9131.0], [44.4, 9142.0], [44.5, 9150.0], [44.6, 9157.0], [44.7, 9168.0], [44.8, 9175.0], [44.9, 9183.0], [45.0, 9194.0], [45.1, 9204.0], [45.2, 9213.0], [45.3, 9221.0], [45.4, 9232.0], [45.5, 9240.0], [45.6, 9253.0], [45.7, 9261.0], [45.8, 9270.0], [45.9, 9277.0], [46.0, 9287.0], [46.1, 9296.0], [46.2, 9306.0], [46.3, 9315.0], [46.4, 9324.0], [46.5, 9334.0], [46.6, 9343.0], [46.7, 9351.0], [46.8, 9360.0], [46.9, 9372.0], [47.0, 9381.0], [47.1, 9388.0], [47.2, 9397.0], [47.3, 9405.0], [47.4, 9413.0], [47.5, 9423.0], [47.6, 9434.0], [47.7, 9445.0], [47.8, 9454.0], [47.9, 9464.0], [48.0, 9472.0], [48.1, 9479.0], [48.2, 9492.0], [48.3, 9500.0], [48.4, 9512.0], [48.5, 9520.0], [48.6, 9528.0], [48.7, 9536.0], [48.8, 9548.0], [48.9, 9556.0], [49.0, 9563.0], [49.1, 9572.0], [49.2, 9584.0], [49.3, 9589.0], [49.4, 9599.0], [49.5, 9611.0], [49.6, 9621.0], [49.7, 9632.0], [49.8, 9641.0], [49.9, 9650.0], [50.0, 9657.0], [50.1, 9664.0], [50.2, 9674.0], [50.3, 9681.0], [50.4, 9690.0], [50.5, 9700.0], [50.6, 9706.0], [50.7, 9715.0], [50.8, 9725.0], [50.9, 9733.0], [51.0, 9744.0], [51.1, 9753.0], [51.2, 9762.0], [51.3, 9770.0], [51.4, 9779.0], [51.5, 9789.0], [51.6, 9800.0], [51.7, 9808.0], [51.8, 9814.0], [51.9, 9820.0], [52.0, 9829.0], [52.1, 9837.0], [52.2, 9845.0], [52.3, 9855.0], [52.4, 9864.0], [52.5, 9873.0], [52.6, 9881.0], [52.7, 9888.0], [52.8, 9896.0], [52.9, 9903.0], [53.0, 9916.0], [53.1, 9925.0], [53.2, 9934.0], [53.3, 9945.0], [53.4, 9955.0], [53.5, 9962.0], [53.6, 9974.0], [53.7, 9984.0], [53.8, 9991.0], [53.9, 10002.0], [54.0, 10007.0], [54.1, 10007.0], [54.2, 10007.0], [54.3, 10007.0], [54.4, 10007.0], [54.5, 10007.0], [54.6, 10007.0], [54.7, 10007.0], [54.8, 10007.0], [54.9, 10007.0], [55.0, 10007.0], [55.1, 10007.0], [55.2, 10007.0], [55.3, 10007.0], [55.4, 10007.0], [55.5, 10007.0], [55.6, 10007.0], [55.7, 10007.0], [55.8, 10007.0], [55.9, 10007.0], [56.0, 10007.0], [56.1, 10007.0], [56.2, 10007.0], [56.3, 10007.0], [56.4, 10007.0], [56.5, 10007.0], [56.6, 10007.0], [56.7, 10007.0], [56.8, 10007.0], [56.9, 10007.0], [57.0, 10007.0], [57.1, 10007.0], [57.2, 10007.0], [57.3, 10007.0], [57.4, 10007.0], [57.5, 10007.0], [57.6, 10007.0], [57.7, 10007.0], [57.8, 10007.0], [57.9, 10007.0], [58.0, 10007.0], [58.1, 10007.0], [58.2, 10007.0], [58.3, 10007.0], [58.4, 10007.0], [58.5, 10007.0], [58.6, 10007.0], [58.7, 10007.0], [58.8, 10007.0], [58.9, 10007.0], [59.0, 10007.0], [59.1, 10007.0], [59.2, 10007.0], [59.3, 10007.0], [59.4, 10007.0], [59.5, 10008.0], [59.6, 10008.0], [59.7, 10008.0], [59.8, 10008.0], [59.9, 10008.0], [60.0, 10008.0], [60.1, 10008.0], [60.2, 10008.0], [60.3, 10008.0], [60.4, 10008.0], [60.5, 10008.0], [60.6, 10008.0], [60.7, 10008.0], [60.8, 10008.0], [60.9, 10008.0], [61.0, 10008.0], [61.1, 10008.0], [61.2, 10008.0], [61.3, 10008.0], [61.4, 10008.0], [61.5, 10008.0], [61.6, 10008.0], [61.7, 10008.0], [61.8, 10008.0], [61.9, 10008.0], [62.0, 10008.0], [62.1, 10008.0], [62.2, 10008.0], [62.3, 10008.0], [62.4, 10008.0], [62.5, 10008.0], [62.6, 10008.0], [62.7, 10008.0], [62.8, 10008.0], [62.9, 10008.0], [63.0, 10008.0], [63.1, 10008.0], [63.2, 10008.0], [63.3, 10008.0], [63.4, 10008.0], [63.5, 10008.0], [63.6, 10008.0], [63.7, 10008.0], [63.8, 10008.0], [63.9, 10008.0], [64.0, 10008.0], [64.1, 10008.0], [64.2, 10008.0], [64.3, 10008.0], [64.4, 10008.0], [64.5, 10008.0], [64.6, 10008.0], [64.7, 10008.0], [64.8, 10008.0], [64.9, 10008.0], [65.0, 10008.0], [65.1, 10008.0], [65.2, 10008.0], [65.3, 10008.0], [65.4, 10008.0], [65.5, 10008.0], [65.6, 10008.0], [65.7, 10008.0], [65.8, 10008.0], [65.9, 10008.0], [66.0, 10008.0], [66.1, 10008.0], [66.2, 10008.0], [66.3, 10008.0], [66.4, 10008.0], [66.5, 10008.0], [66.6, 10008.0], [66.7, 10008.0], [66.8, 10008.0], [66.9, 10008.0], [67.0, 10008.0], [67.1, 10008.0], [67.2, 10008.0], [67.3, 10008.0], [67.4, 10008.0], [67.5, 10008.0], [67.6, 10008.0], [67.7, 10008.0], [67.8, 10008.0], [67.9, 10008.0], [68.0, 10008.0], [68.1, 10008.0], [68.2, 10008.0], [68.3, 10008.0], [68.4, 10008.0], [68.5, 10008.0], [68.6, 10008.0], [68.7, 10008.0], [68.8, 10008.0], [68.9, 10008.0], [69.0, 10008.0], [69.1, 10008.0], [69.2, 10008.0], [69.3, 10008.0], [69.4, 10008.0], [69.5, 10008.0], [69.6, 10008.0], [69.7, 10008.0], [69.8, 10008.0], [69.9, 10008.0], [70.0, 10009.0], [70.1, 10009.0], [70.2, 10009.0], [70.3, 10009.0], [70.4, 10009.0], [70.5, 10009.0], [70.6, 10009.0], [70.7, 10009.0], [70.8, 10009.0], [70.9, 10009.0], [71.0, 10009.0], [71.1, 10009.0], [71.2, 10009.0], [71.3, 10009.0], [71.4, 10009.0], [71.5, 10009.0], [71.6, 10009.0], [71.7, 10009.0], [71.8, 10009.0], [71.9, 10009.0], [72.0, 10009.0], [72.1, 10009.0], [72.2, 10009.0], [72.3, 10009.0], [72.4, 10009.0], [72.5, 10009.0], [72.6, 10009.0], [72.7, 10009.0], [72.8, 10009.0], [72.9, 10009.0], [73.0, 10009.0], [73.1, 10009.0], [73.2, 10009.0], [73.3, 10009.0], [73.4, 10009.0], [73.5, 10009.0], [73.6, 10009.0], [73.7, 10009.0], [73.8, 10009.0], [73.9, 10009.0], [74.0, 10009.0], [74.1, 10009.0], [74.2, 10009.0], [74.3, 10009.0], [74.4, 10009.0], [74.5, 10009.0], [74.6, 10009.0], [74.7, 10009.0], [74.8, 10009.0], [74.9, 10009.0], [75.0, 10009.0], [75.1, 10009.0], [75.2, 10009.0], [75.3, 10009.0], [75.4, 10009.0], [75.5, 10009.0], [75.6, 10009.0], [75.7, 10009.0], [75.8, 10009.0], [75.9, 10009.0], [76.0, 10009.0], [76.1, 10009.0], [76.2, 10009.0], [76.3, 10009.0], [76.4, 10009.0], [76.5, 10009.0], [76.6, 10009.0], [76.7, 10009.0], [76.8, 10009.0], [76.9, 10009.0], [77.0, 10009.0], [77.1, 10009.0], [77.2, 10009.0], [77.3, 10009.0], [77.4, 10009.0], [77.5, 10009.0], [77.6, 10009.0], [77.7, 10009.0], [77.8, 10009.0], [77.9, 10009.0], [78.0, 10009.0], [78.1, 10009.0], [78.2, 10009.0], [78.3, 10009.0], [78.4, 10009.0], [78.5, 10009.0], [78.6, 10009.0], [78.7, 10009.0], [78.8, 10009.0], [78.9, 10009.0], [79.0, 10009.0], [79.1, 10009.0], [79.2, 10009.0], [79.3, 10009.0], [79.4, 10009.0], [79.5, 10009.0], [79.6, 10009.0], [79.7, 10009.0], [79.8, 10009.0], [79.9, 10010.0], [80.0, 10010.0], [80.1, 10010.0], [80.2, 10010.0], [80.3, 10010.0], [80.4, 10010.0], [80.5, 10010.0], [80.6, 10010.0], [80.7, 10010.0], [80.8, 10010.0], [80.9, 10010.0], [81.0, 10010.0], [81.1, 10010.0], [81.2, 10010.0], [81.3, 10010.0], [81.4, 10010.0], [81.5, 10010.0], [81.6, 10010.0], [81.7, 10010.0], [81.8, 10010.0], [81.9, 10010.0], [82.0, 10010.0], [82.1, 10010.0], [82.2, 10010.0], [82.3, 10010.0], [82.4, 10010.0], [82.5, 10010.0], [82.6, 10010.0], [82.7, 10010.0], [82.8, 10010.0], [82.9, 10010.0], [83.0, 10010.0], [83.1, 10010.0], [83.2, 10010.0], [83.3, 10010.0], [83.4, 10010.0], [83.5, 10010.0], [83.6, 10010.0], [83.7, 10010.0], [83.8, 10010.0], [83.9, 10010.0], [84.0, 10010.0], [84.1, 10010.0], [84.2, 10010.0], [84.3, 10010.0], [84.4, 10010.0], [84.5, 10010.0], [84.6, 10010.0], [84.7, 10010.0], [84.8, 10010.0], [84.9, 10010.0], [85.0, 10010.0], [85.1, 10010.0], [85.2, 10010.0], [85.3, 10010.0], [85.4, 10010.0], [85.5, 10010.0], [85.6, 10010.0], [85.7, 10010.0], [85.8, 10010.0], [85.9, 10010.0], [86.0, 10010.0], [86.1, 10010.0], [86.2, 10010.0], [86.3, 10010.0], [86.4, 10010.0], [86.5, 10010.0], [86.6, 10010.0], [86.7, 10010.0], [86.8, 10010.0], [86.9, 10010.0], [87.0, 10010.0], [87.1, 10010.0], [87.2, 10010.0], [87.3, 10010.0], [87.4, 10010.0], [87.5, 10010.0], [87.6, 10010.0], [87.7, 10010.0], [87.8, 10010.0], [87.9, 10010.0], [88.0, 10010.0], [88.1, 10010.0], [88.2, 10010.0], [88.3, 10010.0], [88.4, 10010.0], [88.5, 10010.0], [88.6, 10010.0], [88.7, 10010.0], [88.8, 10010.0], [88.9, 10010.0], [89.0, 10010.0], [89.1, 10010.0], [89.2, 10010.0], [89.3, 10010.0], [89.4, 10010.0], [89.5, 10010.0], [89.6, 10010.0], [89.7, 10010.0], [89.8, 10010.0], [89.9, 10010.0], [90.0, 10010.0], [90.1, 10010.0], [90.2, 10010.0], [90.3, 10010.0], [90.4, 10010.0], [90.5, 10010.0], [90.6, 10010.0], [90.7, 10010.0], [90.8, 10010.0], [90.9, 10010.0], [91.0, 10011.0], [91.1, 10011.0], [91.2, 10011.0], [91.3, 10011.0], [91.4, 10011.0], [91.5, 10011.0], [91.6, 10011.0], [91.7, 10011.0], [91.8, 10011.0], [91.9, 10011.0], [92.0, 10011.0], [92.1, 10011.0], [92.2, 10011.0], [92.3, 10011.0], [92.4, 10011.0], [92.5, 10011.0], [92.6, 10011.0], [92.7, 10011.0], [92.8, 10011.0], [92.9, 10011.0], [93.0, 10011.0], [93.1, 10011.0], [93.2, 10011.0], [93.3, 10011.0], [93.4, 10011.0], [93.5, 10011.0], [93.6, 10011.0], [93.7, 10011.0], [93.8, 10011.0], [93.9, 10011.0], [94.0, 10011.0], [94.1, 10011.0], [94.2, 10011.0], [94.3, 10011.0], [94.4, 10011.0], [94.5, 10011.0], [94.6, 10011.0], [94.7, 10011.0], [94.8, 10011.0], [94.9, 10011.0], [95.0, 10011.0], [95.1, 10011.0], [95.2, 10012.0], [95.3, 10012.0], [95.4, 10012.0], [95.5, 10012.0], [95.6, 10012.0], [95.7, 10012.0], [95.8, 10012.0], [95.9, 10012.0], [96.0, 10012.0], [96.1, 10012.0], [96.2, 10012.0], [96.3, 10012.0], [96.4, 10012.0], [96.5, 10013.0], [96.6, 10013.0], [96.7, 10013.0], [96.8, 10013.0], [96.9, 10013.0], [97.0, 10013.0], [97.1, 10013.0], [97.2, 10013.0], [97.3, 10014.0], [97.4, 10014.0], [97.5, 10014.0], [97.6, 10014.0], [97.7, 10014.0], [97.8, 10014.0], [97.9, 10015.0], [98.0, 10015.0], [98.1, 10016.0], [98.2, 10016.0], [98.3, 10017.0], [98.4, 10018.0], [98.5, 10019.0], [98.6, 10020.0], [98.7, 10027.0], [98.8, 10035.0], [98.9, 10044.0], [99.0, 10057.0], [99.1, 10069.0], [99.2, 10076.0], [99.3, 10087.0], [99.4, 10103.0], [99.5, 10112.0], [99.6, 10125.0], [99.7, 10138.0], [99.8, 10156.0], [99.9, 10168.0], [100.0, 10266.0]], "isOverall": false, "label": "01 - Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 14025.0, "series": [{"data": [[0.0, 161.0], [100.0, 49.0], [200.0, 16.0], [300.0, 17.0], [400.0, 11.0], [500.0, 7.0], [600.0, 19.0], [700.0, 17.0], [800.0, 32.0], [900.0, 22.0], [1000.0, 26.0], [1100.0, 25.0], [1200.0, 19.0], [1300.0, 14.0], [1400.0, 16.0], [1500.0, 32.0], [1600.0, 29.0], [1700.0, 44.0], [1800.0, 32.0], [1900.0, 20.0], [2000.0, 24.0], [2100.0, 31.0], [2200.0, 34.0], [2300.0, 43.0], [2400.0, 25.0], [2500.0, 49.0], [2600.0, 34.0], [2700.0, 41.0], [2800.0, 43.0], [2900.0, 26.0], [3000.0, 39.0], [3100.0, 47.0], [3200.0, 83.0], [3300.0, 124.0], [3400.0, 148.0], [3500.0, 137.0], [3600.0, 151.0], [3700.0, 86.0], [3800.0, 95.0], [3900.0, 128.0], [4000.0, 145.0], [4100.0, 161.0], [4200.0, 133.0], [4300.0, 150.0], [4400.0, 135.0], [4600.0, 126.0], [4500.0, 117.0], [4700.0, 100.0], [4800.0, 112.0], [5100.0, 106.0], [5000.0, 125.0], [4900.0, 105.0], [5300.0, 115.0], [5200.0, 131.0], [5600.0, 192.0], [5400.0, 167.0], [5500.0, 175.0], [5800.0, 355.0], [5700.0, 250.0], [5900.0, 475.0], [6000.0, 578.0], [6100.0, 491.0], [6200.0, 828.0], [6300.0, 549.0], [6500.0, 415.0], [6400.0, 657.0], [6600.0, 448.0], [6900.0, 368.0], [6700.0, 417.0], [6800.0, 409.0], [7000.0, 391.0], [7100.0, 371.0], [7200.0, 494.0], [7300.0, 438.0], [7400.0, 370.0], [7600.0, 304.0], [7500.0, 315.0], [7900.0, 439.0], [7700.0, 338.0], [7800.0, 331.0], [8000.0, 485.0], [8100.0, 467.0], [8200.0, 570.0], [8600.0, 394.0], [8300.0, 536.0], [8400.0, 501.0], [8500.0, 408.0], [8700.0, 350.0], [8800.0, 356.0], [9200.0, 292.0], [8900.0, 303.0], [9000.0, 343.0], [9100.0, 363.0], [9300.0, 331.0], [9500.0, 345.0], [9600.0, 276.0], [9400.0, 350.0], [9700.0, 307.0], [9800.0, 310.0], [10000.0, 8175.0], [9900.0, 309.0], [10100.0, 13.0], [10200.0, 1.0], [10700.0, 8.0], [10800.0, 6.0], [10900.0, 2.0], [11000.0, 42.0]], "isOverall": false, "label": "02 - Validate Invoice", "isController": false}, {"data": [[100.0, 46.0], [200.0, 48.0], [300.0, 43.0], [400.0, 31.0], [500.0, 22.0], [600.0, 23.0], [700.0, 20.0], [800.0, 27.0], [900.0, 27.0], [1000.0, 28.0], [1100.0, 18.0], [1200.0, 25.0], [1300.0, 21.0], [1400.0, 21.0], [1500.0, 21.0], [1600.0, 29.0], [1700.0, 39.0], [1800.0, 27.0], [1900.0, 32.0], [2000.0, 38.0], [2100.0, 37.0], [2200.0, 61.0], [2300.0, 44.0], [2400.0, 58.0], [2500.0, 61.0], [2600.0, 44.0], [2800.0, 52.0], [2700.0, 50.0], [2900.0, 79.0], [3000.0, 70.0], [3100.0, 51.0], [3300.0, 70.0], [3200.0, 69.0], [3400.0, 76.0], [3500.0, 78.0], [3600.0, 74.0], [3700.0, 80.0], [3800.0, 88.0], [3900.0, 115.0], [4000.0, 101.0], [4200.0, 103.0], [4100.0, 108.0], [4300.0, 114.0], [4500.0, 106.0], [4600.0, 116.0], [4400.0, 115.0], [4700.0, 147.0], [4800.0, 136.0], [5000.0, 125.0], [4900.0, 127.0], [5100.0, 135.0], [5200.0, 136.0], [5300.0, 161.0], [5400.0, 153.0], [5500.0, 157.0], [5600.0, 186.0], [5800.0, 188.0], [5700.0, 183.0], [5900.0, 229.0], [6000.0, 274.0], [6100.0, 227.0], [6300.0, 253.0], [6200.0, 242.0], [6400.0, 244.0], [6600.0, 283.0], [6500.0, 264.0], [6900.0, 292.0], [6800.0, 279.0], [6700.0, 287.0], [7000.0, 271.0], [7100.0, 286.0], [7300.0, 261.0], [7400.0, 304.0], [7200.0, 277.0], [7600.0, 254.0], [7500.0, 295.0], [7700.0, 294.0], [7800.0, 303.0], [7900.0, 279.0], [8100.0, 305.0], [8000.0, 298.0], [8300.0, 301.0], [8400.0, 290.0], [8500.0, 306.0], [8200.0, 310.0], [8700.0, 305.0], [8600.0, 317.0], [9100.0, 347.0], [8900.0, 314.0], [9000.0, 324.0], [8800.0, 331.0], [9200.0, 333.0], [9400.0, 329.0], [9300.0, 339.0], [9500.0, 343.0], [9700.0, 338.0], [9600.0, 336.0], [9900.0, 322.0], [9800.0, 383.0], [10000.0, 14025.0], [10100.0, 188.0], [10200.0, 3.0]], "isOverall": false, "label": "01 - Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 232.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 44095.0, "series": [{"data": [[0.0, 422.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 232.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16241.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 44095.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 87.32382550335566, "minX": 1.76119716E12, "maxY": 1000.0, "series": [{"data": [[1.76119776E12, 928.1765042979944], [1.76119728E12, 1000.0], [1.76119746E12, 1000.0], [1.76119716E12, 87.32382550335566], [1.76119764E12, 1000.0], [1.76119734E12, 1000.0], [1.76119752E12, 1000.0], [1.7611977E12, 1000.0], [1.76119722E12, 667.0925051916164], [1.7611974E12, 1000.0], [1.76119758E12, 1000.0]], "isOverall": false, "label": "Extreme Load - 1000 Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76119776E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.0, "maxY": 10033.0, "series": [{"data": [[26.0, 63.4], [27.0, 60.25], [28.0, 56.0], [29.0, 77.5], [30.0, 64.66666666666667], [31.0, 34.0], [36.0, 39.0], [38.0, 37.5], [39.0, 38.0], [40.0, 30.0], [41.0, 34.5], [42.0, 1942.0], [43.0, 36.666666666666664], [44.0, 33.0], [45.0, 31.0], [46.0, 23.0], [47.0, 2863.0], [48.0, 50.666666666666664], [49.0, 60.0], [50.0, 59.0], [51.0, 2123.0], [52.0, 58.0], [53.0, 1976.0], [54.0, 36.5], [55.0, 6159.0], [56.0, 24.0], [57.0, 2018.6666666666667], [58.0, 47.5], [60.0, 42.0], [61.0, 40.0], [62.0, 1003.3333333333334], [63.0, 1017.8333333333333], [64.0, 1447.0], [65.0, 36.0], [67.0, 38.0], [66.0, 5858.0], [68.0, 2349.2], [70.0, 1990.6666666666667], [71.0, 5907.0], [69.0, 6377.0], [72.0, 57.0], [73.0, 39.25], [75.0, 61.5], [74.0, 6061.5], [76.0, 76.5], [77.0, 1577.0], [78.0, 85.6], [79.0, 2045.6666666666667], [80.0, 1360.4], [81.0, 45.0], [82.0, 34.5], [83.0, 74.5], [84.0, 88.0], [85.0, 1269.8], [86.0, 54.333333333333336], [87.0, 1612.5], [88.0, 116.5], [89.0, 1108.5], [90.0, 65.0], [91.0, 73.5], [92.0, 2113.666666666667], [93.0, 43.0], [95.0, 69.33333333333333], [94.0, 6241.0], [96.0, 53.5], [97.0, 4052.3333333333335], [98.0, 2056.666666666667], [99.0, 119.5], [100.0, 2163.0], [102.0, 2105.1666666666665], [103.0, 176.0], [104.0, 1678.125], [105.0, 1047.4285714285713], [106.0, 114.0], [107.0, 6072.0], [108.0, 95.0], [109.0, 59.5], [110.0, 49.0], [111.0, 1602.25], [112.0, 75.0], [113.0, 81.0], [114.0, 118.5], [115.0, 133.0], [117.0, 119.0], [118.0, 130.0], [119.0, 178.33333333333334], [120.0, 2188.0], [121.0, 264.0], [122.0, 3458.0], [123.0, 337.0], [124.0, 340.6], [125.0, 329.75], [127.0, 321.25], [128.0, 430.5], [130.0, 1379.5], [131.0, 1403.1666666666667], [134.0, 5971.0], [138.0, 686.5], [141.0, 3418.5], [142.0, 2133.8], [143.0, 2066.5], [136.0, 6013.0], [144.0, 942.0], [145.0, 705.5], [146.0, 2386.666666666667], [147.0, 775.0], [148.0, 1939.4], [150.0, 931.0], [153.0, 594.0], [154.0, 3229.0], [156.0, 2499.666666666667], [157.0, 1594.142857142857], [158.0, 2438.666666666667], [163.0, 562.0], [164.0, 679.5], [165.0, 952.3333333333334], [167.0, 803.3333333333334], [160.0, 6186.0], [168.0, 847.8333333333334], [169.0, 604.0], [172.0, 1232.3333333333333], [173.0, 1013.0], [171.0, 5241.0], [178.0, 1075.4], [179.0, 1064.4736842105262], [182.0, 1474.5555555555557], [191.0, 6769.0], [196.0, 6238.0], [195.0, 5870.0], [194.0, 5826.0], [203.0, 5802.0], [214.0, 5810.0], [211.0, 5821.0], [209.0, 5813.0], [218.0, 5794.0], [216.0, 5740.0], [225.0, 3380.0], [229.0, 645.0], [232.0, 599.0], [239.0, 5775.0], [238.0, 5797.0], [237.0, 6248.0], [236.0, 6183.0], [244.0, 883.0], [245.0, 6548.333333333333], [242.0, 5719.0], [241.0, 5752.0], [240.0, 5631.0], [250.0, 1685.5], [254.0, 1211.5], [255.0, 3473.25], [252.0, 6011.0], [251.0, 5850.0], [248.0, 5838.5], [263.0, 1938.8333333333335], [259.0, 2119.714285714286], [258.0, 5877.0], [257.0, 6272.0], [260.0, 4167.0], [261.0, 3471.0], [262.0, 2858.0], [266.0, 2613.8571428571427], [267.0, 1725.25], [268.0, 2145.0], [271.0, 5899.0], [265.0, 6247.0], [264.0, 5864.0], [270.0, 6339.0], [269.0, 6254.0], [285.0, 1616.083333333333], [278.0, 2191.777777777778], [277.0, 5955.0], [276.0, 5896.5], [279.0, 2558.5], [280.0, 1576.6], [281.0, 1473.6], [282.0, 2251.909090909091], [283.0, 2693.0], [284.0, 2333.4], [274.0, 6000.0], [273.0, 6022.0], [272.0, 5971.0], [286.0, 4172.0], [287.0, 2713.0], [301.0, 1624.6], [291.0, 1864.0], [290.0, 5951.5], [288.0, 5967.0], [292.0, 2342.0], [294.0, 6388.0], [293.0, 6461.0], [295.0, 3959.0], [302.0, 2192.25], [303.0, 1657.0], [299.0, 5740.0], [297.0, 6522.0], [296.0, 5880.0], [304.0, 2000.0], [308.0, 2190.0], [309.0, 2303.5], [310.0, 1331.5], [311.0, 5852.0], [312.0, 1169.0], [319.0, 1872.0], [314.0, 1661.6666666666667], [315.0, 1514.0], [316.0, 2293.166666666667], [305.0, 5882.0], [317.0, 1702.5], [334.0, 5818.0], [327.0, 2121.5], [326.0, 3733.0], [329.0, 2754.0], [330.0, 1514.0], [335.0, 5843.0], [333.0, 5814.0], [323.0, 6516.0], [331.0, 5815.0], [325.0, 5820.0], [336.0, 2195.1538461538466], [337.0, 1983.0], [346.0, 2559.529411764706], [347.0, 2565.181818181818], [348.0, 2065.0], [351.0, 2674.25], [342.0, 6672.0], [353.0, 1934.8999999999999], [352.0, 1797.5], [354.0, 3505.333333333333], [364.0, 1999.25], [355.0, 5907.0], [356.0, 2323.1666666666665], [357.0, 2152.1], [358.0, 2598.8], [359.0, 2378.5], [361.0, 2464.0], [362.0, 3752.0], [371.0, 2430.0], [372.0, 2135.0], [373.0, 2194.3333333333335], [374.0, 1654.0], [375.0, 2093.5], [383.0, 4260.5], [384.0, 2609.6153846153848], [385.0, 2564.8], [386.0, 3203.0], [387.0, 1930.5], [395.0, 2787.5], [396.0, 2642.777777777778], [397.0, 3136.7499999999995], [400.0, 2959.1739130434785], [401.0, 3037.75], [402.0, 2625.9999999999995], [403.0, 2886.4], [404.0, 2679.0], [405.0, 2744.5], [406.0, 2601.0], [409.0, 5582.0], [416.0, 3361.0], [417.0, 2994.125], [418.0, 2796.0], [419.0, 2909.3999999999996], [420.0, 3127.8], [423.0, 3646.0], [429.0, 5683.0], [424.0, 5545.0], [433.0, 3663.0], [434.0, 4283.5], [446.0, 5614.0], [445.0, 5600.0], [441.0, 5704.0], [437.0, 5638.0], [436.0, 5579.0], [449.0, 3449.2352941176473], [450.0, 3740.8750000000005], [456.0, 4114.800000000001], [457.0, 3565.714285714286], [458.0, 3470.0], [462.0, 4038.8], [463.0, 3606.0], [455.0, 5655.0], [478.0, 5657.0], [469.0, 3367.325581395349], [470.0, 3357.6], [472.0, 3586.5], [473.0, 4075.0], [479.0, 5652.0], [474.0, 5596.0], [471.0, 6031.0], [466.0, 5615.0], [485.0, 3321.0], [486.0, 3675.846153846154], [491.0, 3595.0], [492.0, 3587.6666666666665], [495.0, 5591.0], [490.0, 5630.0], [481.0, 5620.0], [503.0, 4132.907407407408], [504.0, 3780.4], [505.0, 3991.75], [506.0, 4770.0], [511.0, 5840.0], [510.0, 5653.0], [500.0, 5796.0], [498.0, 5817.0], [525.0, 3332.6], [515.0, 3569.230769230769], [537.0, 5749.0], [522.0, 3685.733333333333], [523.0, 3234.1428571428573], [524.0, 3386.333333333333], [526.0, 3180.0], [527.0, 3340.0], [540.0, 3674.7500000000005], [541.0, 3903.5], [542.0, 4259.0], [543.0, 4751.0], [528.0, 5800.0], [571.0, 5417.0], [567.0, 4672.424999999998], [568.0, 4824.8421052631575], [569.0, 5112.0], [570.0, 5110.833333333333], [572.0, 5117.0], [573.0, 5662.0], [574.0, 5095.0], [558.0, 5588.0], [554.0, 5588.0], [594.0, 4679.0], [582.0, 4812.260869565217], [585.0, 5623.0], [577.0, 5665.0], [583.0, 4708.454545454545], [593.0, 4718.4], [606.0, 4418.5], [604.0, 4069.0], [605.0, 4453.5], [602.0, 3760.2], [603.0, 4081.0], [600.0, 4245.181818181819], [601.0, 3918.0], [595.0, 4616.0], [596.0, 4588.75], [597.0, 4724.3076923076915], [598.0, 4422.944444444445], [599.0, 4333.0], [620.0, 4068.0], [609.0, 5123.5], [634.0, 5488.285714285715], [635.0, 5136.0], [637.0, 5591.0], [639.0, 5407.0], [638.0, 5455.0], [617.0, 4381.590909090909], [618.0, 4304.3], [619.0, 4765.4], [621.0, 5142.333333333333], [623.0, 4291.0], [624.0, 4727.6], [625.0, 5100.0], [656.0, 4920.071428571429], [644.0, 4290.941176470587], [645.0, 5053.758620689654], [664.0, 3829.3333333333335], [665.0, 3807.25], [666.0, 4135.0], [667.0, 3769.0], [668.0, 3786.0], [670.0, 3830.571428571429], [671.0, 3856.6666666666665], [654.0, 5272.117647058824], [655.0, 5733.1], [657.0, 4478.470588235294], [658.0, 4375.666666666666], [659.0, 4594.0], [663.0, 4714.4], [691.0, 4741.5], [673.0, 4290.0], [684.0, 5603.0], [672.0, 4934.0], [674.0, 4201.5], [675.0, 4300.0], [692.0, 4843.677419354839], [693.0, 5042.0], [694.0, 5109.0], [695.0, 5124.0], [696.0, 4859.0], [697.0, 4805.0], [698.0, 4512.0], [699.0, 4826.0], [700.0, 4946.0], [690.0, 5087.0], [689.0, 5535.0], [706.0, 4263.0], [704.0, 5034.0], [719.0, 5453.0], [709.0, 4874.857142857142], [710.0, 4947.708333333335], [711.0, 5147.0], [729.0, 5719.0], [730.0, 4810.0], [731.0, 5576.666666666667], [732.0, 5746.5], [733.0, 5434.0], [734.0, 5486.166666666667], [735.0, 5444.777777777778], [713.0, 5057.0], [714.0, 4970.0], [715.0, 5183.846153846153], [716.0, 4775.75], [739.0, 5276.5], [736.0, 5717.0], [751.0, 4599.0], [750.0, 4948.0], [746.0, 4732.25], [747.0, 4781.0], [737.0, 5105.0], [738.0, 5209.0], [740.0, 5442.0], [741.0, 5121.0], [742.0, 5458.0], [743.0, 4964.5], [761.0, 4545.0], [744.0, 4766.333333333333], [745.0, 4673.5], [786.0, 4528.0], [797.0, 4620.0], [795.0, 4248.0], [793.0, 4443.0], [792.0, 5734.5], [783.0, 4272.0], [772.0, 4534.0], [775.0, 4472.0], [774.0, 4572.0], [780.0, 6952.0], [779.0, 4449.0], [778.0, 4637.0], [777.0, 4395.0], [776.0, 4565.0], [790.0, 4888.0], [788.0, 4285.0], [787.0, 4353.0], [785.0, 4212.0], [816.0, 5153.666666666667], [815.0, 5324.6], [814.0, 4394.0], [813.0, 4344.0], [812.0, 4356.0], [811.0, 4507.0], [810.0, 4238.0], [824.0, 4227.0], [807.0, 4390.0], [806.0, 4139.0], [804.0, 4261.0], [802.0, 4354.0], [817.0, 5552.333333333333], [818.0, 5398.8], [819.0, 5472.157894736842], [820.0, 5698.333333333333], [823.0, 4267.0], [822.0, 4603.5], [825.0, 4996.0], [827.0, 5245.0], [826.0, 4387.0], [828.0, 5275.0], [829.0, 5604.0], [830.0, 4461.5], [831.0, 5030.0], [856.0, 5852.0], [836.0, 5710.0], [832.0, 5216.0], [847.0, 4337.0], [846.0, 4297.333333333333], [843.0, 4330.0], [842.0, 4311.0], [841.0, 4321.0], [840.0, 4325.0], [834.0, 5511.333333333333], [835.0, 5041.0], [837.0, 6279.0], [838.0, 4964.333333333333], [839.0, 5154.0], [857.0, 5851.75], [858.0, 5988.5], [859.0, 6011.5], [860.0, 5807.0], [862.0, 5830.857142857142], [861.0, 4350.0], [863.0, 5648.5], [849.0, 4200.0], [850.0, 6048.5], [851.0, 6106.125], [852.0, 6428.823529411764], [853.0, 5965.666666666667], [854.0, 6521.923076923077], [855.0, 5718.5], [871.0, 5494.833333333334], [867.0, 6184.666666666667], [864.0, 4736.5], [874.0, 5448.8], [875.0, 4498.0], [878.0, 4596.0], [877.0, 6181.0], [879.0, 8403.0], [865.0, 5486.5], [866.0, 5555.333333333333], [868.0, 5699.499999999999], [869.0, 5898.0], [870.0, 5498.75], [880.0, 5938.888888888889], [893.0, 5154.666666666667], [891.0, 5279.0], [892.0, 5399.153846153846], [888.0, 4969.0], [889.0, 4818.5], [881.0, 5919.454545454545], [882.0, 5703.75], [883.0, 4307.0], [884.0, 4998.75], [885.0, 5189.0], [886.0, 5459.0], [887.0, 4985.25], [872.0, 6228.0], [873.0, 5698.0], [898.0, 5367.666666666667], [897.0, 5684.0], [911.0, 6391.333333333333], [896.0, 4367.5], [899.0, 5762.666666666667], [901.0, 5349.0], [902.0, 5688.571428571429], [903.0, 5376.0], [912.0, 6204.0], [925.0, 6626.0], [927.0, 6227.666666666667], [923.0, 6806.428571428572], [924.0, 6973.5], [921.0, 6834.0], [922.0, 6874.5], [916.0, 6443.0], [917.0, 6801.0], [918.0, 6839.0], [919.0, 6903.0], [904.0, 5562.0], [905.0, 5533.5], [908.0, 5994.5], [907.0, 4476.0], [906.0, 4489.0], [909.0, 6181.333333333333], [931.0, 6359.0], [940.0, 5225.0], [929.0, 6455.0], [943.0, 6808.5], [932.0, 6301.0], [935.0, 6389.4], [944.0, 5806.0], [959.0, 3521.0], [957.0, 6168.0], [956.0, 4458.0], [955.0, 3685.0], [945.0, 5592.428571428572], [946.0, 5194.333333333333], [947.0, 5947.0], [948.0, 5515.6], [949.0, 6858.666666666667], [951.0, 7249.5], [936.0, 6440.749999999999], [937.0, 6318.0], [939.0, 6620.5], [941.0, 6379.0], [942.0, 6877.0], [963.0, 7000.349999999999], [962.0, 6531.727272727273], [961.0, 3826.0], [960.0, 4787.0], [974.0, 6612.0], [973.0, 3391.6666666666665], [972.0, 4317.0], [975.0, 4509.333333333333], [964.0, 6116.368421052631], [965.0, 7478.4375], [966.0, 5309.428571428572], [967.0, 6369.714285714286], [976.0, 5642.0], [987.0, 4104.75], [984.0, 3750.8], [977.0, 4735.285714285715], [978.0, 6519.666666666667], [979.0, 3449.0], [983.0, 3759.25], [982.0, 5640.0], [968.0, 6005.5], [969.0, 4804.333333333333], [970.0, 7505.666666666667], [971.0, 4874.666666666667], [995.0, 7866.0], [992.0, 7844.0], [993.0, 7847.4], [994.0, 7822.0], [996.0, 7803.666666666666], [997.0, 7826.9], [998.0, 7746.923076923078], [999.0, 7873.75], [1000.0, 8134.585867750615]], "isOverall": false, "label": "02 - Validate Invoice", "isController": false}, {"data": [[959.9565390353054, 7771.013790817186]], "isOverall": false, "label": "02 - Validate Invoice-Aggregated", "isController": false}, {"data": [[2.0, 6122.0], [3.0, 6518.0], [4.0, 6673.0], [5.0, 6092.0], [6.0, 7472.0], [7.0, 7269.0], [8.0, 6110.0], [9.0, 7065.0], [10.0, 6013.0], [11.0, 7279.0], [12.0, 5998.0], [13.0, 8119.0], [14.0, 7779.0], [15.0, 6571.0], [16.0, 7073.0], [17.0, 6055.0], [18.0, 914.4], [19.0, 8050.0], [20.0, 2111.666666666667], [21.0, 3119.5], [22.0, 6023.0], [23.0, 2057.0], [24.0, 3567.5], [25.0, 5979.0], [26.0, 7505.0], [27.0, 2124.0], [28.0, 5978.0], [29.0, 5994.0], [30.0, 3169.5], [31.0, 3991.5], [32.0, 214.33333333333334], [33.0, 3063.25], [35.0, 2430.6666666666665], [34.0, 7051.0], [36.0, 1138.0], [37.0, 7066.0], [38.0, 187.0], [39.0, 4611.333333333333], [40.0, 2153.75], [41.0, 1247.8333333333333], [42.0, 189.66666666666666], [43.0, 3082.5], [45.0, 1119.6666666666667], [44.0, 6413.0], [46.0, 165.0], [47.0, 3470.5], [49.0, 172.0], [48.0, 5860.0], [50.0, 4001.5], [51.0, 282.0], [52.0, 1406.8], [53.0, 297.4], [54.0, 3197.0], [55.0, 317.5], [56.0, 308.75], [57.0, 1665.75], [58.0, 2043.25], [59.0, 1690.75], [60.0, 3910.5], [61.0, 2125.666666666667], [62.0, 391.6666666666667], [63.0, 216.5], [64.0, 539.0], [65.0, 1745.8], [66.0, 419.0], [67.0, 519.5], [68.0, 342.5714285714286], [69.0, 191.0], [70.0, 303.6666666666667], [72.0, 469.2], [73.0, 774.5], [74.0, 3187.5], [75.0, 1896.0], [76.0, 3183.5], [77.0, 428.0], [78.0, 1537.2857142857142], [79.0, 399.8333333333333], [81.0, 3147.0], [82.0, 1885.75], [83.0, 1614.3333333333335], [84.0, 3963.5], [85.0, 269.0], [86.0, 342.5], [87.0, 3172.6666666666665], [88.0, 1985.25], [89.0, 1105.0], [90.0, 766.5], [91.0, 570.0], [93.0, 1782.3333333333333], [94.0, 861.8], [95.0, 1581.6666666666665], [92.0, 7519.5], [96.0, 493.0], [97.0, 638.3333333333334], [98.0, 738.5], [99.0, 2436.8], [100.0, 911.8], [101.0, 392.0], [103.0, 886.0], [104.0, 1017.1666666666666], [105.0, 845.0], [106.0, 677.3333333333334], [107.0, 3233.5], [108.0, 998.0], [109.0, 3471.4], [110.0, 2598.0], [111.0, 1135.25], [112.0, 2070.6], [113.0, 2766.666666666667], [114.0, 3224.6666666666665], [115.0, 2753.5], [116.0, 2423.0], [117.0, 2075.5], [118.0, 2336.5], [119.0, 2596.75], [120.0, 1261.5], [121.0, 3040.3333333333335], [122.0, 1013.0], [123.0, 7183.0], [124.0, 1313.75], [126.0, 5273.0], [127.0, 935.6], [128.0, 5414.0], [129.0, 3573.2], [130.0, 543.0], [131.0, 1474.0], [132.0, 353.0], [134.0, 5745.0], [136.0, 4433.5], [137.0, 2983.6666666666665], [138.0, 2581.4285714285716], [141.0, 2908.4], [142.0, 1775.0], [143.0, 1678.5], [139.0, 7162.0], [144.0, 3334.333333333333], [145.0, 1173.0], [146.0, 2275.1666666666665], [147.0, 4644.0], [148.0, 1210.0], [149.0, 3321.25], [150.0, 4194.0], [151.0, 2388.0], [152.0, 3880.333333333333], [153.0, 3728.0], [154.0, 1981.0], [155.0, 2777.6], [156.0, 1220.0], [158.0, 2021.0], [159.0, 2616.6], [160.0, 2415.3333333333335], [161.0, 4064.333333333333], [162.0, 3762.0], [163.0, 2638.2], [165.0, 2564.0], [166.0, 2384.0], [167.0, 1964.3333333333333], [164.0, 7483.0], [168.0, 4947.666666666667], [169.0, 1911.3333333333333], [172.0, 4148.5], [173.0, 1801.8333333333333], [174.0, 3360.3333333333335], [175.0, 2937.5], [170.0, 7030.0], [176.0, 2772.285714285714], [177.0, 3015.666666666667], [178.0, 2661.25], [181.0, 2070.75], [182.0, 2492.0], [183.0, 2946.0], [180.0, 7061.5], [184.0, 2667.0], [185.0, 1915.5], [186.0, 2163.090909090909], [187.0, 3035.4], [188.0, 1058.75], [189.0, 5539.0], [190.0, 7837.0], [199.0, 6583.0], [198.0, 6850.0], [197.0, 6103.0], [193.0, 7445.0], [192.0, 6989.0], [207.0, 7194.0], [206.0, 7619.0], [205.0, 6855.0], [202.0, 6035.0], [201.0, 6072.0], [200.0, 5773.0], [214.0, 1691.0], [215.0, 4925.5], [213.0, 6125.0], [212.0, 7579.0], [210.0, 6917.0], [208.0, 7540.0], [216.0, 873.0], [223.0, 7200.0], [222.0, 6561.333333333333], [219.0, 7543.0], [217.0, 7500.0], [231.0, 7200.5], [229.0, 7256.0], [228.0, 7396.0], [227.0, 6927.0], [226.0, 7412.0], [224.0, 6432.0], [235.0, 6140.0], [234.0, 7054.0], [233.0, 5875.0], [232.0, 7404.0], [244.0, 531.0], [246.0, 1189.0], [247.0, 1118.125], [248.0, 4016.5], [249.0, 2161.25], [250.0, 1420.0], [254.0, 1053.6], [255.0, 1041.0], [253.0, 6403.0], [257.0, 2941.75], [256.0, 1629.4285714285713], [258.0, 1549.8333333333333], [259.0, 1847.0], [260.0, 1701.6666666666667], [261.0, 1923.0], [262.0, 1447.3333333333333], [263.0, 1487.5], [264.0, 1351.25], [270.0, 1756.6666666666667], [271.0, 1569.75], [268.0, 1998.0], [269.0, 1036.3333333333333], [265.0, 1717.75], [266.0, 936.0], [285.0, 1985.0], [272.0, 2644.0], [277.0, 1830.0], [281.0, 1776.6], [280.0, 7288.0], [282.0, 2051.5], [283.0, 2509.6666666666665], [284.0, 1898.0], [286.0, 2017.0], [287.0, 2153.0], [293.0, 2154.363636363636], [294.0, 2214.625], [295.0, 2718.5], [296.0, 2313.0], [302.0, 2290.0], [303.0, 6207.0], [301.0, 7155.0], [300.0, 6750.0], [311.0, 2819.777777777778], [304.0, 4515.0], [307.0, 5735.0], [306.0, 6880.0], [316.0, 3149.6666666666665], [317.0, 4759.0], [318.0, 3819.75], [319.0, 5001.5], [308.0, 4269.666666666667], [309.0, 3808.142857142857], [310.0, 3313.571428571429], [312.0, 3220.9166666666665], [313.0, 2816.3636363636365], [314.0, 2898.8], [315.0, 2819.3333333333335], [333.0, 3687.4285714285716], [320.0, 3284.285714285714], [327.0, 6874.0], [324.0, 6202.0], [321.0, 4300.333333333333], [328.0, 5110.0], [329.0, 3132.6], [330.0, 3758.7142857142862], [331.0, 2918.5], [332.0, 3913.5384615384614], [322.0, 6637.0], [334.0, 3071.6666666666665], [335.0, 3411.3333333333335], [339.0, 4546.75], [336.0, 3446.0], [337.0, 3987.25], [338.0, 3967.0], [340.0, 4677.75], [341.0, 6447.0], [343.0, 5633.0], [346.0, 4814.0], [347.0, 3753.333333333333], [348.0, 4311.6], [349.0, 3793.0], [350.0, 4712.111111111111], [351.0, 3580.75], [344.0, 5977.0], [364.0, 3024.6666666666665], [353.0, 3904.105263157895], [352.0, 3943.0000000000005], [359.0, 7361.0], [354.0, 2955.6666666666665], [367.0, 5990.0], [366.0, 7074.0], [365.0, 7076.0], [357.0, 3867.8], [356.0, 7061.0], [358.0, 4177.0], [360.0, 4048.285714285714], [361.0, 4055.5], [362.0, 3568.444444444444], [363.0, 4018.4], [371.0, 4468.0], [373.0, 3904.2727272727275], [372.0, 7246.0], [374.0, 4763.666666666667], [375.0, 3213.333333333333], [368.0, 6857.0], [370.0, 7031.0], [369.0, 7051.0], [376.0, 4328.2], [377.0, 6713.0], [379.0, 6408.0], [378.0, 5917.0], [382.0, 3063.0], [383.0, 5690.0], [381.0, 6026.0], [380.0, 6752.0], [387.0, 3395.235294117647], [385.0, 5271.0], [384.0, 4020.0], [391.0, 6269.0], [390.0, 6603.0], [386.0, 4038.0], [388.0, 3867.0], [389.0, 3557.7000000000003], [395.0, 3923.5000000000005], [394.0, 7267.0], [393.0, 7295.0], [392.0, 6941.0], [397.0, 4863.333333333333], [396.0, 6970.0], [398.0, 6809.0], [399.0, 6529.0], [401.0, 5208.0], [400.0, 4189.0], [402.0, 3495.0], [403.0, 3508.5714285714284], [404.0, 3707.714285714286], [405.0, 3854.3333333333335], [406.0, 4180.166666666667], [407.0, 3939.166666666667], [408.0, 3868.285714285714], [411.0, 6790.0], [410.0, 7161.0], [414.0, 5076.0], [413.0, 6503.0], [415.0, 4000.7], [417.0, 4237.4], [416.0, 4970.333333333333], [418.0, 3624.5714285714284], [419.0, 4887.0], [421.0, 3688.5000000000005], [420.0, 6486.0], [422.0, 3630.6], [423.0, 4187.166666666667], [424.0, 3178.375], [429.0, 2877.0], [428.0, 6822.0], [431.0, 6895.5], [425.0, 3863.4], [426.0, 5395.0], [427.0, 3962.3333333333335], [433.0, 4470.0], [432.0, 4057.666666666667], [434.0, 5416.5], [435.0, 4871.666666666667], [436.0, 3627.1666666666665], [437.0, 3366.0], [438.0, 3949.8], [439.0, 2928.0], [440.0, 4440.428571428572], [446.0, 2931.6], [447.0, 5815.0], [444.0, 4265.166666666667], [445.0, 3979.0], [441.0, 3839.666666666667], [442.0, 4874.333333333333], [443.0, 2990.75], [460.0, 4187.846153846154], [448.0, 5406.5], [454.0, 6866.0], [453.0, 6768.0], [452.0, 6479.0], [449.0, 4912.5], [450.0, 4402.6], [451.0, 6500.0], [456.0, 3229.0], [459.0, 5050.666666666667], [458.0, 6096.0], [461.0, 4689.0], [462.0, 3502.8181818181815], [463.0, 4177.625], [465.0, 5199.0], [464.0, 3631.3333333333335], [467.0, 3920.1000000000004], [476.0, 4444.2], [477.0, 3434.6666666666665], [478.0, 4674.833333333334], [479.0, 4279.333333333333], [468.0, 4131.2], [469.0, 4620.8], [470.0, 4733.0], [471.0, 4413.666666666667], [472.0, 3966.142857142857], [473.0, 4228.5], [474.0, 4017.0], [475.0, 4388.25], [487.0, 4026.1666666666665], [484.0, 4308.090909090909], [485.0, 4663.6], [486.0, 4467.1], [488.0, 4917.0], [494.0, 4161.125], [495.0, 3155.5], [489.0, 4511.8], [490.0, 4324.333333333333], [491.0, 4116.750000000001], [492.0, 3233.0], [483.0, 6758.0], [482.0, 6179.0], [480.0, 6769.0], [493.0, 4250.833333333334], [497.0, 5149.333333333333], [496.0, 4037.0], [498.0, 4626.0], [499.0, 4793.0], [500.0, 2629.0], [501.0, 4164.0], [502.0, 4603.375], [503.0, 4630.0], [504.0, 4553.0], [505.0, 6562.0], [510.0, 3416.5], [511.0, 2416.0], [508.0, 3432.1], [509.0, 3890.4], [506.0, 6060.5], [507.0, 3762.25], [515.0, 4066.0], [525.0, 4591.444444444444], [512.0, 5119.5], [513.0, 4394.25], [514.0, 4400.0], [528.0, 3815.2], [542.0, 4332.333333333333], [543.0, 3431.6], [540.0, 3880.0], [541.0, 5459.25], [538.0, 4575.6], [539.0, 3846.0], [536.0, 3676.5714285714284], [519.0, 5719.0], [518.0, 6017.0], [517.0, 5880.0], [516.0, 6198.0], [537.0, 4562.5], [529.0, 4016.5714285714284], [530.0, 4717.5], [531.0, 4384.0], [532.0, 4358.6], [533.0, 5140.5], [534.0, 4089.0], [535.0, 5023.0], [522.0, 5546.5], [521.0, 6047.0], [520.0, 6310.0], [523.0, 3861.1666666666665], [524.0, 3823.1428571428573], [526.0, 4459.444444444444], [527.0, 4104.9], [547.0, 4498.5], [557.0, 4531.727272727272], [545.0, 4207.6], [544.0, 4580.666666666667], [558.0, 5345.0], [559.0, 4231.428571428572], [546.0, 4572.666666666667], [548.0, 4991.0], [549.0, 5958.0], [551.0, 6441.0], [550.0, 6406.0], [569.0, 4866.5], [570.0, 3934.0], [571.0, 4505.8], [572.0, 4766.666666666667], [573.0, 4245.375], [574.0, 5134.0], [575.0, 5801.0], [560.0, 4517.222222222223], [561.0, 4908.0], [562.0, 5038.0], [563.0, 4752.2], [564.0, 5832.0], [565.0, 4714.666666666667], [566.0, 4080.1666666666674], [567.0, 4844.666666666667], [554.0, 4357.571428571428], [553.0, 6446.0], [552.0, 6217.0], [555.0, 5329.0], [556.0, 4232.625], [583.0, 4486.0], [579.0, 4085.3333333333335], [578.0, 4384.666666666667], [576.0, 6062.0], [580.0, 4890.5], [581.0, 4593.25], [582.0, 5306.5], [594.0, 5109.25], [593.0, 6329.0], [592.0, 6196.0], [606.0, 5141.299999999999], [607.0, 4388.333333333333], [604.0, 5000.5], [605.0, 5164.5], [602.0, 5723.0], [603.0, 4745.8], [600.0, 5251.777777777777], [601.0, 5195.333333333333], [595.0, 5045.0], [596.0, 5144.0], [597.0, 5029.6], [598.0, 5141.444444444444], [599.0, 4828.4], [584.0, 4096.666666666667], [585.0, 5090.333333333333], [586.0, 4444.4], [588.0, 6304.0], [587.0, 5941.0], [590.0, 6066.0], [589.0, 6136.0], [591.0, 5960.0], [613.0, 5770.0], [609.0, 5725.5], [608.0, 5176.6], [623.0, 4794.666666666667], [621.0, 4892.5], [622.0, 4991.0], [610.0, 5547.3], [611.0, 4897.6], [612.0, 5155.909090909091], [624.0, 4742.333333333333], [637.0, 4482.5], [636.0, 5844.0], [638.0, 4089.0], [634.0, 4604.5], [635.0, 4547.0], [632.0, 4538.5], [615.0, 5901.0], [614.0, 5739.0], [633.0, 5217.75], [625.0, 5286.166666666667], [626.0, 5406.4], [627.0, 5262.333333333333], [628.0, 4708.142857142858], [629.0, 4787.0], [631.0, 5456.0], [630.0, 5931.5], [617.0, 5502.083333333333], [616.0, 5955.0], [618.0, 4994.0], [619.0, 4775.8], [620.0, 4919.25], [665.0, 4660.333333333333], [643.0, 4408.4], [641.0, 4504.285714285715], [640.0, 4773.285714285715], [642.0, 4498.285714285715], [644.0, 4737.833333333334], [645.0, 4304.0], [654.0, 5032.5], [653.0, 5153.0], [652.0, 5274.0], [651.0, 5115.0], [650.0, 5248.0], [649.0, 5115.0], [648.0, 5347.0], [655.0, 5243.5], [656.0, 5168.5], [670.0, 5136.6], [671.0, 4869.0], [668.0, 5301.874999999999], [669.0, 5061.818181818182], [666.0, 5017.5], [667.0, 5170.6], [664.0, 5264.0], [647.0, 5530.0], [646.0, 5385.0], [657.0, 5013.666666666666], [658.0, 5153.6], [659.0, 5070.142857142858], [660.0, 4917.4], [661.0, 5116.5], [662.0, 5307.8], [663.0, 5176.75], [697.0, 5870.5], [675.0, 4593.0], [672.0, 4614.5], [687.0, 4944.0], [686.0, 5370.0], [685.0, 5344.0], [683.0, 5346.0], [682.0, 5380.0], [681.0, 5284.0], [680.0, 5356.0], [673.0, 4784.0], [674.0, 4906.833333333333], [676.0, 4716.333333333334], [677.0, 5094.0], [688.0, 4993.5], [703.0, 5637.0], [701.0, 5453.5], [702.0, 5625.0], [698.0, 5436.375], [700.0, 5810.400000000001], [696.0, 5552.75], [679.0, 5116.0], [689.0, 5906.6], [690.0, 5676.666666666667], [691.0, 5392.714285714285], [692.0, 5655.25], [693.0, 5688.222222222223], [694.0, 5577.166666666666], [695.0, 5451.666666666667], [709.0, 5555.25], [705.0, 5566.166666666667], [704.0, 5655.999999999999], [706.0, 5574.2], [707.0, 5477.8], [708.0, 5989.249999999999], [730.0, 6626.2], [729.0, 4896.0], [728.0, 5046.0], [711.0, 4713.0], [710.0, 5095.0], [731.0, 6953.666666666666], [734.0, 4208.0], [721.0, 4760.0], [720.0, 4988.0], [723.0, 4884.0], [722.0, 4755.0], [725.0, 4655.0], [724.0, 5010.0], [727.0, 4990.0], [726.0, 4908.0], [733.0, 4621.0], [732.0, 4644.0], [714.0, 5638.5], [713.0, 5103.0], [715.0, 6273.5], [716.0, 6482.0], [717.0, 5024.0], [718.0, 5046.0], [743.0, 6530.666666666667], [739.0, 6229.5], [736.0, 6194.166666666666], [749.0, 4400.0], [748.0, 4479.0], [746.0, 7034.25], [747.0, 7520.0], [737.0, 5613.444444444444], [738.0, 6414.125], [740.0, 6266.0], [741.0, 6635.2], [742.0, 6217.666666666667], [767.0, 4205.0], [753.0, 4473.0], [752.0, 4432.0], [755.0, 4321.0], [754.0, 4337.0], [757.0, 4322.0], [756.0, 4418.0], [759.0, 4362.0], [758.0, 4368.0], [766.0, 4263.0], [765.0, 4231.0], [764.0, 4110.0], [763.0, 4173.0], [762.0, 4329.0], [760.0, 4334.0], [744.0, 6389.666666666667], [745.0, 7150.333333333333], [794.0, 4092.0], [798.0, 4066.0], [799.0, 4077.0], [796.0, 4077.0], [789.0, 4134.0], [784.0, 4154.0], [782.0, 4136.0], [781.0, 4233.0], [774.0, 4129.0], [772.0, 4255.0], [770.0, 4114.0], [769.0, 4134.0], [768.0, 4231.0], [827.0, 7080.538461538462], [814.0, 7974.0], [810.0, 4082.0], [808.0, 4001.0], [815.0, 8202.666666666668], [820.0, 5583.5], [830.0, 6555.333333333333], [831.0, 6843.727272727273], [821.0, 7200.874999999999], [822.0, 7023.0], [823.0, 6517.125], [826.0, 7516.6], [806.0, 4047.0], [803.0, 4080.0], [801.0, 4118.0], [800.0, 4109.0], [828.0, 6832.0], [829.0, 6685.777777777777], [839.0, 7623.166666666667], [835.0, 7670.333333333333], [832.0, 7638.333333333333], [833.0, 6367.833333333333], [834.0, 7192.333333333333], [836.0, 6776.4], [837.0, 7117.333333333333], [838.0, 6504.6], [851.0, 8116.0], [848.0, 4074.0], [862.0, 6305.5], [863.0, 6790.0], [860.0, 7088.2], [861.0, 6351.6], [858.0, 7157.222222222223], [859.0, 7343.142857142857], [856.0, 7802.75], [857.0, 7371.599999999999], [853.0, 7766.0], [854.0, 7935.0], [855.0, 5759.5], [871.0, 6578.333333333333], [867.0, 7538.857142857142], [864.0, 6994.833333333334], [878.0, 7157.5], [876.0, 3993.0], [879.0, 5179.0], [874.0, 7715.6], [875.0, 5351.5], [865.0, 8253.5], [866.0, 7398.0], [868.0, 8352.4], [869.0, 8215.0], [870.0, 7796.875], [880.0, 7694.0], [894.0, 5534.5], [895.0, 6113.0], [892.0, 6612.8], [893.0, 6778.25], [890.0, 5333.0], [891.0, 7531.6], [888.0, 7497.25], [889.0, 5464.5], [881.0, 7552.857142857143], [882.0, 7781.714285714285], [883.0, 7562.571428571429], [884.0, 7837.909090909091], [885.0, 7935.166666666667], [886.0, 6367.666666666667], [887.0, 7392.333333333333], [872.0, 6772.0], [873.0, 8085.25], [903.0, 7120.0], [897.0, 6841.0], [896.0, 6818.0], [910.0, 6048.4], [909.0, 4902.0], [911.0, 5015.5], [898.0, 6725.666666666667], [899.0, 5904.333333333333], [900.0, 6147.0], [912.0, 6492.0], [927.0, 7465.777777777777], [926.0, 3233.0], [924.0, 7528.333333333334], [925.0, 8404.6], [922.0, 7184.2], [923.0, 5826.666666666667], [920.0, 6529.333333333333], [921.0, 7438.666666666666], [913.0, 7140.5], [915.0, 6377.333333333333], [914.0, 3703.0], [916.0, 6432.75], [917.0, 6109.857142857143], [918.0, 7600.333333333333], [919.0, 3737.0], [904.0, 6051.666666666667], [905.0, 9008.0], [906.0, 5751.25], [907.0, 8690.0], [908.0, 5173.333333333333], [931.0, 6405.666666666667], [928.0, 7980.428571428571], [943.0, 5918.25], [940.0, 9239.0], [941.0, 2997.0], [942.0, 7587.666666666667], [938.0, 6818.25], [939.0, 8137.357142857142], [929.0, 7886.5], [930.0, 6429.333333333333], [932.0, 7880.857142857143], [933.0, 7622.333333333333], [934.0, 7177.0], [935.0, 8255.42857142857], [944.0, 8113.4], [954.0, 6597.0], [953.0, 4502.0], [952.0, 3604.0], [958.0, 10009.0], [945.0, 7131.428571428572], [946.0, 8627.0], [947.0, 6683.0], [948.0, 7645.0], [949.0, 6958.0], [950.0, 7670.5], [951.0, 5953.5], [936.0, 6865.6], [937.0, 7208.8], [963.0, 9523.000000000002], [960.0, 10008.5], [975.0, 8600.166666666668], [973.0, 8858.076923076922], [974.0, 8793.333333333334], [971.0, 9316.0], [972.0, 9055.555555555555], [961.0, 9140.333333333334], [962.0, 9737.4], [964.0, 10012.0], [965.0, 9922.0], [966.0, 9285.0], [967.0, 8814.0], [976.0, 9184.0], [989.0, 6680.5], [990.0, 3168.5], [991.0, 7757.333333333334], [984.0, 10007.5], [987.0, 3602.0], [988.0, 7788.333333333334], [977.0, 8347.333333333334], [981.0, 10011.0], [979.0, 3695.0], [982.0, 10033.0], [983.0, 10008.0], [969.0, 8130.000000000001], [970.0, 9012.333333333334], [993.0, 8688.6], [992.0, 6432.181818181818], [994.0, 5590.4], [996.0, 4342.125000000001], [997.0, 5834.5], [999.0, 3941.416666666666], [1000.0, 8825.396061587742], [998.0, 3531.0], [995.0, 3407.5], [1.0, 6093.0]], "isOverall": false, "label": "01 - Login", "isController": false}, {"data": [[948.0686780210805, 8378.67334955397]], "isOverall": false, "label": "01 - Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3909.2166666666667, "minX": 1.76119716E12, "maxY": 165252.3, "series": [{"data": [[1.76119776E12, 124757.45], [1.76119728E12, 116376.71666666666], [1.76119746E12, 141119.35], [1.76119716E12, 6133.85], [1.76119764E12, 165252.3], [1.76119734E12, 132730.16666666666], [1.76119752E12, 152446.23333333334], [1.7611977E12, 158584.43333333332], [1.76119722E12, 61593.05], [1.7611974E12, 141402.05], [1.76119758E12, 146030.68333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.76119776E12, 33544.78333333333], [1.76119728E12, 27286.95], [1.76119746E12, 21789.433333333334], [1.76119716E12, 3909.2166666666667], [1.76119764E12, 15859.666666666666], [1.76119734E12, 26721.083333333332], [1.76119752E12, 23408.416666666668], [1.7611977E12, 15864.816666666668], [1.76119722E12, 33839.48333333333], [1.7611974E12, 21602.416666666668], [1.76119758E12, 15358.566666666668]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76119776E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 176.20072992700736, "minX": 1.76119716E12, "maxY": 9611.801820728264, "series": [{"data": [[1.76119776E12, 6442.5365474339], [1.76119728E12, 7840.132362459545], [1.76119746E12, 8152.469999999976], [1.76119716E12, 176.20072992700736], [1.76119764E12, 9120.486333333316], [1.76119734E12, 7643.386485633107], [1.76119752E12, 7768.519122048568], [1.7611977E12, 9009.132817753876], [1.76119722E12, 4986.649345335513], [1.7611974E12, 7964.097300899683], [1.76119758E12, 9074.303040427698]], "isOverall": false, "label": "02 - Validate Invoice", "isController": false}, {"data": [[1.76119776E12, 7437.711819389106], [1.76119728E12, 9611.801820728264], [1.76119746E12, 8537.189531859547], [1.76119716E12, 707.3229813664599], [1.76119764E12, 9340.464285714288], [1.76119734E12, 8550.5933698297], [1.76119752E12, 8624.567069660328], [1.7611977E12, 9395.022963760313], [1.76119722E12, 5705.868909919373], [1.7611974E12, 8649.064600326237], [1.76119758E12, 9095.849937473946]], "isOverall": false, "label": "01 - Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76119776E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 175.48175182481756, "minX": 1.76119716E12, "maxY": 7486.1822006472485, "series": [{"data": [[1.76119776E12, 4875.846345256606], [1.76119728E12, 7486.1822006472485], [1.76119746E12, 4785.763000000011], [1.76119716E12, 175.48175182481756], [1.76119764E12, 4459.253999999991], [1.76119734E12, 5553.7379223239495], [1.76119752E12, 4888.899900232782], [1.7611977E12, 4673.877269670482], [1.76119722E12, 4985.011047463181], [1.7611974E12, 4751.91736087971], [1.76119758E12, 4391.234881389903]], "isOverall": false, "label": "02 - Validate Invoice", "isController": false}, {"data": [[1.76119776E12, 4449.0363877821965], [1.76119728E12, 3375.3396358543405], [1.76119746E12, 3921.8254226267936], [1.76119716E12, 706.7484472049686], [1.76119764E12, 3249.575170068025], [1.76119734E12, 4141.772810218968], [1.76119752E12, 3509.335924006902], [1.7611977E12, 3008.0028704700394], [1.76119722E12, 5058.75779880827], [1.7611974E12, 3772.9761827079983], [1.76119758E12, 3262.6148395164637]], "isOverall": false, "label": "01 - Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76119776E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.76119716E12, "maxY": 37.30003341129313, "series": [{"data": [[1.76119776E12, 0.135614307931571], [1.76119728E12, 0.4543689320388354], [1.76119746E12, 0.2316666666666664], [1.76119716E12, 0.0], [1.76119764E12, 0.27000000000000063], [1.76119734E12, 0.36122513419640057], [1.76119752E12, 3.323910874625876], [1.7611977E12, 0.44384667114996684], [1.76119722E12, 0.020458265139116208], [1.7611974E12, 15.937354215261577], [1.76119758E12, 37.30003341129313]], "isOverall": false, "label": "02 - Validate Invoice", "isController": false}, {"data": [[1.76119776E12, 0.22363877822045147], [1.76119728E12, 0.044467787114845884], [1.76119746E12, 0.24772431729518854], [1.76119716E12, 1.7173913043478273], [1.76119764E12, 0.284353741496599], [1.76119734E12, 0.29075425790754256], [1.76119752E12, 0.18077144502014966], [1.7611977E12, 0.28094725511302565], [1.76119722E12, 0.29863301787592], [1.7611974E12, 0.8802610114192495], [1.76119758E12, 0.330137557315547]], "isOverall": false, "label": "01 - Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76119776E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.76119716E12, "maxY": 10120.0, "series": [{"data": [[1.76119776E12, 10010.0], [1.76119728E12, 10018.0], [1.76119746E12, 10005.0], [1.76119716E12, 2503.0], [1.76119764E12, 10008.0], [1.76119734E12, 10002.0], [1.76119752E12, 10005.0], [1.7611977E12, 10005.0], [1.76119722E12, 10005.0], [1.7611974E12, 10120.0], [1.76119758E12, 10007.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.76119776E12, 9188.6], [1.76119728E12, 9871.2], [1.76119746E12, 9404.0], [1.76119716E12, 1238.8000000000004], [1.76119764E12, 9681.4], [1.76119734E12, 9535.8], [1.76119752E12, 9468.0], [1.7611977E12, 9712.0], [1.76119722E12, 9063.6], [1.7611974E12, 9381.2], [1.76119758E12, 9676.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.76119776E12, 9954.06], [1.76119728E12, 9998.880000000001], [1.76119746E12, 9916.0], [1.76119716E12, 2202.199999999999], [1.76119764E12, 9969.880000000001], [1.76119734E12, 9957.18], [1.76119752E12, 9942.0], [1.7611977E12, 9972.9], [1.76119722E12, 9885.979999999998], [1.7611974E12, 9947.52], [1.76119758E12, 9953.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.76119776E12, 9573.8], [1.76119728E12, 9948.0], [1.76119746E12, 9741.0], [1.76119716E12, 1593.55], [1.76119764E12, 9836.599999999999], [1.76119734E12, 9728.8], [1.76119752E12, 9745.0], [1.7611977E12, 9849.5], [1.76119722E12, 9494.1], [1.7611974E12, 9659.5], [1.76119758E12, 9813.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.76119776E12, 1655.0], [1.76119728E12, 5858.0], [1.76119746E12, 3728.0], [1.76119716E12, 19.0], [1.76119764E12, 5064.0], [1.76119734E12, 3517.0], [1.76119752E12, 3088.0], [1.7611977E12, 5330.0], [1.76119722E12, 256.0], [1.7611974E12, 3842.0], [1.76119758E12, 3392.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.76119776E12, 6554.0], [1.76119728E12, 9104.0], [1.76119746E12, 7302.0], [1.76119716E12, 235.0], [1.76119764E12, 8473.0], [1.76119734E12, 7360.0], [1.76119752E12, 7173.0], [1.7611977E12, 8475.0], [1.76119722E12, 4951.0], [1.7611974E12, 7402.0], [1.76119758E12, 7934.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76119776E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 189.0, "minX": 2.0, "maxY": 11014.5, "series": [{"data": [[6.0, 8205.0], [7.0, 7420.0], [9.0, 6986.0], [13.0, 5783.0], [14.0, 7930.5], [16.0, 9696.0], [18.0, 7486.0], [19.0, 4768.0], [21.0, 8511.0], [22.0, 9031.5], [24.0, 8744.0], [25.0, 4871.0], [26.0, 4558.0], [27.0, 6341.0], [28.0, 9138.0], [30.0, 6161.0], [31.0, 7169.0], [32.0, 2319.0], [33.0, 8851.0], [34.0, 6012.0], [35.0, 9047.0], [37.0, 7286.0], [36.0, 8690.5], [39.0, 189.0], [40.0, 8574.0], [41.0, 5260.0], [42.0, 6024.5], [43.0, 6412.5], [45.0, 7625.0], [44.0, 9012.0], [47.0, 2810.5], [46.0, 6716.5], [49.0, 5761.0], [48.0, 7583.0], [51.0, 7797.0], [50.0, 7235.0], [52.0, 7543.0], [53.0, 7896.0], [55.0, 8352.5], [54.0, 8406.0], [57.0, 6488.0], [56.0, 6827.0], [58.0, 8082.0], [59.0, 9163.0], [61.0, 7738.5], [60.0, 7800.0], [62.0, 8065.5], [63.0, 7453.0], [64.0, 8094.0], [66.0, 7810.0], [65.0, 6884.5], [67.0, 8227.5], [68.0, 7637.0], [70.0, 8061.0], [71.0, 8700.5], [69.0, 6981.0], [72.0, 6918.0], [73.0, 7766.0], [75.0, 6318.0], [74.0, 6980.0], [76.0, 8006.5], [79.0, 6407.0], [78.0, 7602.0], [77.0, 6429.5], [82.0, 7001.0], [80.0, 5913.0], [83.0, 5763.0], [81.0, 8569.0], [87.0, 4226.0], [85.0, 5527.0], [84.0, 5200.0], [86.0, 7462.0], [91.0, 375.5], [89.0, 6551.0], [90.0, 7956.0], [88.0, 8465.0], [92.0, 4048.0], [95.0, 5407.0], [94.0, 3922.5], [93.0, 7075.0], [97.0, 2282.5], [96.0, 8675.0], [98.0, 9074.0], [101.0, 650.5], [100.0, 6695.0], [103.0, 9104.0], [102.0, 9684.0], [105.0, 8602.0], [107.0, 8970.0], [104.0, 6901.5], [110.0, 6444.0], [109.0, 6070.0], [111.0, 8518.5], [108.0, 9036.0], [113.0, 7395.0], [112.0, 8259.5], [115.0, 9420.0], [119.0, 2494.0], [116.0, 4021.0], [118.0, 6208.0], [117.0, 7150.5], [123.0, 4179.0], [122.0, 3736.5], [120.0, 9490.5], [124.0, 5604.5], [127.0, 9110.0], [125.0, 5867.5], [130.0, 7999.0], [128.0, 7836.0], [132.0, 9169.0], [134.0, 6098.0], [129.0, 6260.0], [133.0, 5265.0], [140.0, 8741.0], [141.0, 9242.0], [143.0, 7788.0], [139.0, 3001.0], [146.0, 5077.5], [150.0, 8807.0], [145.0, 9557.0], [147.0, 7991.0], [148.0, 6915.0], [154.0, 7246.0], [159.0, 9670.0], [156.0, 7853.0], [158.0, 2721.0], [161.0, 9515.5], [163.0, 5837.0], [165.0, 5094.0], [171.0, 9412.0], [174.0, 5246.0], [169.0, 7919.5], [176.0, 6816.5], [178.0, 9265.0], [184.0, 4129.5], [187.0, 6924.0], [192.0, 9701.0], [204.0, 7936.0], [210.0, 9690.0], [217.0, 5066.0], [239.0, 9466.0], [262.0, 9803.0], [267.0, 7865.0], [272.0, 9129.5], [283.0, 6289.0], [275.0, 9701.0], [282.0, 9803.0], [289.0, 6742.0], [292.0, 9951.0], [294.0, 9643.0], [306.0, 9702.0], [315.0, 9658.0], [313.0, 9767.5], [334.0, 9691.0], [325.0, 9943.0], [322.0, 3082.0], [342.0, 7819.0], [340.0, 9769.0], [339.0, 9103.0], [336.0, 9856.5], [361.0, 9811.0], [358.0, 9803.0], [372.0, 8070.0], [373.0, 8201.0], [368.0, 7116.0], [387.0, 9847.0], [391.0, 7726.5], [415.0, 8301.0], [425.0, 5832.0], [417.0, 9838.0], [418.0, 5853.0], [426.0, 9915.5], [486.0, 7185.0], [541.0, 5971.5], [567.0, 6152.0], [563.0, 2278.0], [586.0, 7211.5], [615.0, 5756.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 10010.0], [6.0, 7801.5], [7.0, 1324.0], [9.0, 10010.0], [10.0, 10009.0], [11.0, 10010.0], [13.0, 3441.0], [14.0, 9076.5], [16.0, 7698.0], [17.0, 10010.0], [18.0, 10009.0], [19.0, 10009.0], [22.0, 4598.0], [24.0, 8144.0], [25.0, 7186.0], [26.0, 10009.5], [27.0, 10007.0], [28.0, 7527.5], [29.0, 10010.0], [30.0, 10011.0], [31.0, 6979.5], [32.0, 1947.0], [33.0, 10009.0], [34.0, 10008.0], [35.0, 10008.0], [37.0, 10012.0], [36.0, 10009.0], [39.0, 7413.0], [40.0, 10008.0], [41.0, 1686.5], [42.0, 10008.0], [43.0, 4356.0], [45.0, 10009.5], [44.0, 10009.0], [47.0, 2274.0], [46.0, 10007.5], [49.0, 10009.0], [48.0, 10009.0], [50.0, 10009.0], [51.0, 10009.0], [52.0, 10009.0], [53.0, 10008.0], [55.0, 10009.0], [54.0, 10009.0], [57.0, 10009.0], [56.0, 10009.0], [58.0, 10009.0], [59.0, 10009.0], [60.0, 1797.5], [61.0, 10009.0], [62.0, 10009.0], [63.0, 10009.0], [64.0, 10009.0], [66.0, 10009.0], [65.0, 10009.0], [67.0, 10009.0], [68.0, 10009.0], [70.0, 10009.0], [71.0, 10009.0], [69.0, 10009.0], [72.0, 10009.0], [73.0, 10009.0], [74.0, 10009.0], [75.0, 10008.0], [76.0, 10008.0], [77.0, 10008.0], [79.0, 10009.0], [78.0, 10009.0], [82.0, 10007.0], [80.0, 9273.0], [83.0, 6813.5], [81.0, 10010.0], [87.0, 10007.0], [84.0, 7287.0], [86.0, 10008.0], [85.0, 10009.0], [89.0, 9493.0], [91.0, 8877.0], [90.0, 10009.0], [88.0, 10009.0], [92.0, 10008.0], [95.0, 9132.0], [94.0, 4767.0], [93.0, 9487.0], [97.0, 8083.0], [96.0, 10008.0], [98.0, 8363.0], [99.0, 9706.5], [100.0, 10008.0], [103.0, 10008.0], [102.0, 10009.0], [101.0, 11014.5], [105.0, 7417.5], [107.0, 10008.0], [104.0, 9122.5], [110.0, 7621.5], [109.0, 4944.0], [111.0, 10009.0], [108.0, 10008.0], [113.0, 9856.5], [112.0, 7308.5], [115.0, 10007.0], [119.0, 7616.5], [116.0, 10008.0], [118.0, 7386.0], [117.0, 6999.0], [123.0, 3347.0], [122.0, 4246.5], [120.0, 10008.0], [124.0, 7030.5], [127.0, 8088.0], [125.0, 7302.0], [130.0, 4770.0], [128.0, 5910.0], [132.0, 10008.0], [134.0, 8899.0], [129.0, 10008.0], [133.0, 7670.0], [140.0, 8024.0], [141.0, 6924.5], [138.0, 10009.0], [142.0, 10008.5], [136.0, 10009.0], [143.0, 7860.0], [139.0, 3633.0], [146.0, 4967.0], [150.0, 10008.0], [145.0, 10008.0], [149.0, 10009.0], [147.0, 7032.0], [148.0, 10008.0], [154.0, 7603.0], [159.0, 10007.0], [155.0, 10009.0], [156.0, 6885.5], [158.0, 3136.5], [161.0, 10009.0], [163.0, 6159.0], [165.0, 6534.0], [171.0, 8312.0], [173.0, 10009.0], [174.0, 6765.0], [169.0, 8608.0], [176.0, 8339.5], [178.0, 10008.0], [189.0, 10009.0], [184.0, 8106.5], [187.0, 5927.0], [192.0, 10009.0], [204.0, 8925.0], [210.0, 10009.0], [217.0, 6670.5], [222.0, 8442.0], [239.0, 7779.5], [251.0, 10009.0], [264.0, 10009.0], [262.0, 10009.0], [270.0, 7562.0], [267.0, 7946.0], [268.0, 10010.0], [272.0, 7674.5], [283.0, 6813.0], [276.0, 10013.0], [275.0, 10009.0], [285.0, 8869.0], [282.0, 10009.0], [289.0, 5879.0], [292.0, 10009.0], [294.0, 10009.0], [306.0, 10011.0], [315.0, 10009.0], [313.0, 10009.0], [334.0, 10009.0], [321.0, 8193.0], [325.0, 10009.0], [322.0, 4032.0], [342.0, 6776.0], [340.0, 10009.0], [339.0, 9399.0], [336.0, 10009.0], [361.0, 10009.0], [358.0, 10009.0], [356.0, 8482.0], [372.0, 8285.0], [373.0, 8234.5], [368.0, 8154.5], [387.0, 10009.0], [391.0, 8325.0], [415.0, 5910.0], [425.0, 7321.5], [417.0, 10009.0], [418.0, 6255.0], [426.0, 10009.5], [486.0, 6809.0], [509.0, 5906.0], [541.0, 6504.0], [514.0, 6239.5], [543.0, 6076.0], [567.0, 6369.5], [571.0, 6465.0], [563.0, 3570.0], [586.0, 6116.5], [615.0, 6242.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 615.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 9951.0, "series": [{"data": [[6.0, 8205.0], [7.0, 7420.0], [9.0, 6984.0], [13.0, 5783.0], [14.0, 7928.5], [16.0, 9696.0], [18.0, 7486.0], [19.0, 4768.0], [21.0, 8510.0], [22.0, 9031.0], [24.0, 8743.0], [25.0, 4871.0], [26.0, 4557.5], [27.0, 6341.0], [28.0, 9138.0], [30.0, 6161.0], [31.0, 7169.0], [32.0, 2319.0], [33.0, 8850.0], [34.0, 6011.5], [35.0, 9047.0], [37.0, 7285.5], [36.0, 8690.0], [39.0, 188.0], [40.0, 8574.0], [41.0, 5256.0], [42.0, 6024.5], [43.0, 6412.0], [45.0, 7624.0], [44.0, 9012.0], [47.0, 2810.0], [46.0, 6716.5], [49.0, 5761.0], [48.0, 7582.5], [51.0, 7797.0], [50.0, 7235.0], [52.0, 7543.0], [53.0, 7895.0], [55.0, 8352.5], [54.0, 8405.0], [57.0, 6488.0], [56.0, 6823.0], [58.0, 8081.0], [59.0, 9162.5], [61.0, 7738.0], [60.0, 7800.0], [62.0, 8065.5], [63.0, 7452.0], [64.0, 8094.0], [66.0, 7810.0], [65.0, 6884.5], [67.0, 8227.5], [68.0, 7637.0], [70.0, 8060.5], [71.0, 8700.0], [69.0, 6981.0], [72.0, 6918.0], [73.0, 7765.0], [75.0, 6318.0], [74.0, 6980.0], [76.0, 8006.0], [79.0, 6405.5], [78.0, 7601.0], [77.0, 6428.5], [82.0, 7001.0], [80.0, 5913.0], [83.0, 5763.0], [81.0, 8568.0], [87.0, 4226.0], [85.0, 5527.0], [84.0, 5200.0], [86.0, 7461.0], [91.0, 375.5], [89.0, 6547.0], [90.0, 7956.0], [88.0, 8464.5], [92.0, 4048.0], [95.0, 5407.0], [94.0, 3922.0], [93.0, 7074.5], [97.0, 2282.0], [96.0, 8674.5], [98.0, 9074.0], [101.0, 650.5], [100.0, 6694.0], [103.0, 9104.0], [102.0, 9684.0], [105.0, 8602.0], [107.0, 8968.0], [104.0, 6901.0], [110.0, 6444.0], [109.0, 6070.0], [111.0, 8518.0], [108.0, 9034.0], [113.0, 7395.0], [112.0, 8258.5], [115.0, 9420.0], [119.0, 2494.0], [116.0, 4021.0], [118.0, 6208.0], [117.0, 7150.0], [123.0, 4179.0], [122.0, 3736.0], [120.0, 9490.5], [124.0, 5604.5], [127.0, 9110.0], [125.0, 5867.0], [130.0, 7998.0], [128.0, 7836.0], [132.0, 9168.5], [134.0, 6098.0], [129.0, 6260.0], [133.0, 5265.0], [140.0, 8740.0], [141.0, 9242.0], [143.0, 7788.0], [139.0, 3000.5], [146.0, 5077.5], [150.0, 8807.0], [145.0, 9557.0], [147.0, 7991.0], [148.0, 6915.0], [154.0, 7246.0], [159.0, 9670.0], [156.0, 7853.0], [158.0, 2721.0], [161.0, 9515.5], [163.0, 5836.5], [165.0, 5093.0], [171.0, 9412.0], [174.0, 5246.0], [169.0, 7918.0], [176.0, 6808.0], [178.0, 9265.0], [184.0, 4129.5], [187.0, 6924.0], [192.0, 9701.0], [204.0, 7936.0], [210.0, 9690.0], [217.0, 5066.0], [239.0, 9466.0], [262.0, 9802.0], [267.0, 7864.0], [272.0, 9128.5], [283.0, 6288.5], [275.0, 9700.0], [282.0, 9803.0], [289.0, 6742.0], [292.0, 9951.0], [294.0, 9643.0], [306.0, 9701.5], [315.0, 9658.0], [313.0, 9763.5], [334.0, 9691.0], [325.0, 9943.0], [322.0, 3082.0], [342.0, 7819.0], [340.0, 9768.5], [339.0, 9103.0], [336.0, 9856.5], [361.0, 9811.0], [358.0, 9746.0], [372.0, 8070.0], [373.0, 8200.0], [368.0, 7115.5], [387.0, 9847.0], [391.0, 7726.0], [415.0, 8301.0], [425.0, 5832.0], [417.0, 9838.0], [418.0, 5853.0], [426.0, 9915.5], [486.0, 7184.0], [541.0, 5971.5], [567.0, 6152.0], [563.0, 2277.0], [586.0, 7211.0], [615.0, 5756.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [6.0, 7801.5], [7.0, 1323.5], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [13.0, 3441.0], [14.0, 9049.5], [16.0, 7433.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [22.0, 4598.0], [24.0, 7586.0], [25.0, 2072.5], [26.0, 0.0], [27.0, 0.0], [28.0, 6443.0], [29.0, 0.0], [30.0, 0.0], [31.0, 6979.5], [32.0, 1944.0], [33.0, 0.0], [34.0, 0.0], [35.0, 0.0], [37.0, 0.0], [36.0, 0.0], [39.0, 7088.0], [40.0, 0.0], [41.0, 1686.5], [42.0, 0.0], [43.0, 4355.0], [45.0, 0.0], [44.0, 0.0], [47.0, 2273.0], [46.0, 0.0], [49.0, 0.0], [48.0, 0.0], [50.0, 0.0], [51.0, 0.0], [52.0, 0.0], [53.0, 0.0], [55.0, 0.0], [54.0, 0.0], [57.0, 0.0], [56.0, 0.0], [58.0, 0.0], [59.0, 0.0], [60.0, 1371.0], [61.0, 0.0], [62.0, 0.0], [63.0, 0.0], [64.0, 0.0], [66.0, 0.0], [65.0, 0.0], [67.0, 0.0], [68.0, 0.0], [70.0, 0.0], [71.0, 0.0], [69.0, 0.0], [72.0, 0.0], [73.0, 0.0], [74.0, 0.0], [75.0, 0.0], [76.0, 0.0], [77.0, 0.0], [79.0, 0.0], [78.0, 0.0], [82.0, 0.0], [80.0, 5327.0], [83.0, 6805.0], [81.0, 0.0], [87.0, 0.0], [84.0, 5688.0], [86.0, 0.0], [85.0, 0.0], [89.0, 2128.0], [91.0, 8762.0], [90.0, 0.0], [88.0, 0.0], [92.0, 0.0], [95.0, 6064.0], [94.0, 4695.5], [93.0, 7228.0], [97.0, 1931.5], [96.0, 0.0], [98.0, 7325.5], [99.0, 3589.5], [100.0, 0.0], [103.0, 0.0], [102.0, 0.0], [101.0, 0.0], [105.0, 6593.0], [107.0, 0.0], [104.0, 8726.5], [110.0, 6637.0], [109.0, 4924.0], [111.0, 0.0], [108.0, 0.0], [113.0, 2600.0], [112.0, 6689.0], [115.0, 0.0], [119.0, 6537.0], [116.0, 0.0], [118.0, 6306.0], [117.0, 6465.0], [123.0, 3346.5], [122.0, 4246.5], [120.0, 0.0], [124.0, 4385.0], [127.0, 7942.0], [125.0, 7144.0], [130.0, 4442.0], [128.0, 5903.0], [132.0, 0.0], [134.0, 8634.0], [129.0, 0.0], [133.0, 7300.5], [140.0, 7346.5], [141.0, 6635.5], [138.0, 0.0], [142.0, 0.0], [136.0, 0.0], [143.0, 7860.0], [139.0, 3633.0], [146.0, 4967.0], [150.0, 0.0], [145.0, 0.0], [149.0, 0.0], [147.0, 6972.5], [148.0, 0.0], [154.0, 7234.5], [159.0, 0.0], [155.0, 0.0], [156.0, 6885.5], [158.0, 3136.0], [161.0, 0.0], [163.0, 6159.0], [165.0, 6489.5], [171.0, 6779.0], [173.0, 0.0], [174.0, 6727.0], [169.0, 8586.0], [176.0, 7641.5], [178.0, 0.0], [189.0, 0.0], [184.0, 6026.0], [187.0, 5927.0], [192.0, 0.0], [204.0, 8878.0], [210.0, 0.0], [217.0, 6621.5], [222.0, 8285.0], [239.0, 7610.5], [251.0, 0.0], [264.0, 0.0], [262.0, 0.0], [270.0, 6275.0], [267.0, 7714.0], [268.0, 0.0], [272.0, 7363.0], [283.0, 6806.0], [276.0, 0.0], [275.0, 0.0], [285.0, 8827.0], [282.0, 0.0], [289.0, 5801.0], [292.0, 0.0], [294.0, 0.0], [306.0, 0.0], [315.0, 0.0], [313.0, 0.0], [334.0, 0.0], [321.0, 8155.0], [325.0, 0.0], [322.0, 4029.0], [342.0, 6713.0], [340.0, 0.0], [339.0, 9268.5], [336.0, 0.0], [361.0, 0.0], [358.0, 0.0], [356.0, 8469.0], [372.0, 8249.0], [373.0, 8140.5], [368.0, 8042.5], [387.0, 0.0], [391.0, 8303.0], [415.0, 5894.0], [425.0, 7321.5], [417.0, 0.0], [418.0, 6253.0], [426.0, 0.0], [486.0, 6537.0], [509.0, 5898.0], [541.0, 6500.0], [514.0, 6209.0], [543.0, 6055.0], [567.0, 6363.0], [571.0, 6457.0], [563.0, 3570.0], [586.0, 6108.0], [615.0, 6237.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 615.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.85, "minX": 1.76119716E12, "maxY": 108.36666666666666, "series": [{"data": [[1.76119776E12, 100.13333333333334], [1.76119728E12, 99.26666666666667], [1.76119746E12, 101.08333333333333], [1.76119716E12, 11.85], [1.76119764E12, 95.41666666666667], [1.76119734E12, 104.25], [1.76119752E12, 108.36666666666666], [1.7611977E12, 99.5], [1.76119722E12, 102.28333333333333], [1.7611974E12, 104.63333333333334], [1.76119758E12, 89.71666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76119776E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0666666666666667, "minX": 1.76119716E12, "maxY": 84.15, "series": [{"data": [[1.76119776E12, 71.81666666666666], [1.76119728E12, 39.0], [1.76119746E12, 38.05], [1.76119716E12, 9.933333333333334], [1.76119764E12, 22.133333333333333], [1.76119734E12, 46.2], [1.76119752E12, 41.666666666666664], [1.7611977E12, 20.383333333333333], [1.76119722E12, 84.15], [1.7611974E12, 35.93333333333333], [1.76119758E12, 20.883333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.76119776E12, 27.116666666666667], [1.76119728E12, 31.466666666666665], [1.76119746E12, 40.43333333333333], [1.76119764E12, 53.1], [1.76119734E12, 35.15], [1.76119752E12, 44.0], [1.7611977E12, 51.1], [1.76119722E12, 3.066666666666667], [1.7611974E12, 40.916666666666664], [1.76119758E12, 46.56666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.76119776E12, 17.4], [1.76119728E12, 28.633333333333333], [1.76119746E12, 22.783333333333335], [1.76119764E12, 23.766666666666666], [1.76119734E12, 26.233333333333334], [1.76119752E12, 22.35], [1.7611977E12, 24.533333333333335], [1.76119722E12, 1.0666666666666667], [1.7611974E12, 24.25], [1.76119758E12, 22.416666666666668]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76119776E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.76119716E12, "maxY": 53.583333333333336, "series": [{"data": [[1.76119716E12, 4.1], [1.76119722E12, 0.13333333333333333]], "isOverall": false, "label": "02 - Validate Invoice-success", "isController": false}, {"data": [[1.76119776E12, 53.583333333333336], [1.76119728E12, 51.5], [1.76119746E12, 50.0], [1.76119716E12, 0.4666666666666667], [1.76119764E12, 50.0], [1.76119734E12, 52.78333333333333], [1.76119752E12, 50.11666666666667], [1.7611977E12, 49.56666666666667], [1.76119722E12, 40.6], [1.7611974E12, 50.016666666666666], [1.76119758E12, 49.88333333333333]], "isOverall": false, "label": "02 - Validate Invoice-failure", "isController": false}, {"data": [[1.76119776E12, 18.733333333333334], [1.76119728E12, 29.65], [1.76119746E12, 23.616666666666667], [1.76119764E12, 29.816666666666666], [1.76119734E12, 24.133333333333333], [1.76119752E12, 29.583333333333332], [1.7611977E12, 29.633333333333333], [1.76119722E12, 3.066666666666667], [1.7611974E12, 24.866666666666667], [1.76119758E12, 23.3]], "isOverall": false, "label": "01 - Login-failure", "isController": false}, {"data": [[1.76119776E12, 44.016666666666666], [1.76119728E12, 17.95], [1.76119746E12, 27.65], [1.76119716E12, 5.366666666666666], [1.76119764E12, 19.183333333333334], [1.76119734E12, 30.666666666666668], [1.76119752E12, 28.316666666666666], [1.7611977E12, 16.816666666666666], [1.76119722E12, 44.483333333333334], [1.7611974E12, 26.216666666666665], [1.76119758E12, 16.683333333333334]], "isOverall": false, "label": "01 - Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76119776E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.76119716E12, "maxY": 81.15, "series": [{"data": [[1.76119776E12, 44.016666666666666], [1.76119728E12, 17.95], [1.76119746E12, 27.65], [1.76119716E12, 9.466666666666667], [1.76119764E12, 19.183333333333334], [1.76119734E12, 30.666666666666668], [1.76119752E12, 28.316666666666666], [1.7611977E12, 16.816666666666666], [1.76119722E12, 44.61666666666667], [1.7611974E12, 26.216666666666665], [1.76119758E12, 16.683333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.76119776E12, 72.31666666666666], [1.76119728E12, 81.15], [1.76119746E12, 73.61666666666666], [1.76119716E12, 0.4666666666666667], [1.76119764E12, 79.81666666666666], [1.76119734E12, 76.91666666666667], [1.76119752E12, 79.7], [1.7611977E12, 79.2], [1.76119722E12, 43.666666666666664], [1.7611974E12, 74.88333333333334], [1.76119758E12, 73.18333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76119776E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

