spring:
  application:
    name: accounts
  threads:
    virtual:
      enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:fraud_db}?prepareThreshold=3&preparedStatementCacheQueries=256&preparedStatementCacheSizeMiB=5
    username: ${DB_USER:frauduser}
    password: ${DB_PASSWORD:fraudpass123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:30}
      minimum-idle: ${HIKARI_MIN_IDLE:30}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:10000}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:300000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1800000}
      keepalive-time: ${HIKARI_KEEPALIVE_TIME:120000}
      pool-name: AccountsHikariPool
      leak-detection-threshold: ${HIKARI_LEAK_DETECTION:60000}
      connection-test-query: SELECT 1
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis123}
      timeout: ${REDIS_TIMEOUT:100ms}
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:100}
          max-idle: ${REDIS_POOL_MAX_IDLE:50}
          min-idle: ${REDIS_POOL_MIN_IDLE:20}
          max-wait: ${REDIS_POOL_MAX_WAIT:100ms}
        shutdown-timeout: ${REDIS_SHUTDOWN_TIMEOUT:100ms}
  main:
    web-application-type: servlet
  sql:
    init:
      mode: never

server:
  port: ${SERVER_PORT:8081}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

security:
  api-key: ${API_KEY:changeme}

logging:
  level:
    root: INFO
    com.finlab.accounts: ${LOG_LEVEL:DEBUG}
    org.springframework.jdbc: ${JDBC_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
